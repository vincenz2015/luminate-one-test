{"version":3,"sources":["webpack:///./node_modules/spacetime/builds/spacetime.mjs","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/vue-hyperscript-terse/index.js","webpack:///./node_modules/array-flat-polyfill/index.mjs"],"names":["module","fns","exports","isLeapYear","year","isDate","d","Object","prototype","toString","call","isNaN","valueOf","isArray","input","isObject","zeroPad","str","len","length","Array","join","titleCase","toUpperCase","substr","ordinal","i","j","k","toCardinal","String","replace","parseInt","normalize","toLowerCase","trim","getEpoch","tmp","getTime","epoch","beADate","s","clone","set","formatTimezone","offset","delimiter","absOffset","Math","abs","fn","summerTime","start","end","defaultOffset","Date","shift","getTimezoneOffset","current","getMonth","getDate","getHours","n","quick","obj","timezones","tz","undefined","console","warn","dst","jul","dec","hem","split","_prefixes","data","freeze","all","keys","forEach","Number","before","num","name","unpack","isOffset","isNumber","utcOffset","gmtOffset","toIana","parseOffset_1","m","match","local","timezone","Intl","DateTimeFormat","format","resolvedOptions","timeZone","safeIntl","guessTz_1","cities","reduce","h","city","find","zones","hasOwnProperty","test","id","Error","o","millisecond","date","day","month","week","milliseconds","walk","unit","previous","startUnit","original","diff","hour","halfStep","units","valid","walkTo","getYear","minute","second","seconds","walk_1","wants","old","silent","shortMonths","longMonths","months","sep","buildMapping","i18n","short","long","parseOffset_1$1","parseFloat","parseTime_1","arr","startOf","ampm","monthLengths_1","hasDate_1","max","months$1","parseYear","getFullYear","strParse","reg","parse","givenTz","options","dates","now","tonight","today","tomorrow","add","yesterday","subtract","christmas","namedDates","defaults","order","handleArray","assign","handleObject","shortDays","longDays","days","_offset","isNegative","floor","ceil","dayName","monthName","time","hour24","hour12","quarter","season","era","numeric","iso","h24","toISOString","nice","aliases","mdy","dmy","ymd","format_1","isValid","out","indexOf","sections","_","fmt","pad","mapping","G","GG","GGG","GGGG","y","yy","yyy","yyyy","yyyyy","Q","QQ","QQQ","QQQQ","M","MM","MMM","MMMM","w","ww","dd","D","dayOfYear","DD","DDD","E","EE","EEE","EEEE","EEEEE","e","ee","eee","eeee","eeeee","a","aa","aaa","aaaa","h12","hh","H","HH","mm","ss","A","z","zz","zzz","zzzz","Z","ZZ","ZZZ","ZZZZ","addAlias","char","to","toName","unixFmt_1","chars","quoteOn","push","txt","c","units$1","doUnit","duration","endOf","percent","toFixed","progress_1","nearest_1","prog","progress","climb","b","isBefore","isAfter","one","waterfall","msDiff","minutes","hours","years","fastYear","weeks","diff$1","reversed","reverseDiff","qualifiers","almost","over","pluralize","value","slice","since_1","later","earlier","isSame","u","getDiff","every","rounded","qualified","precise","englishValues","englishValue","nextUnit","nextValue","splice","seasons","north","south","quarters","units$2","quarterhour","_weekStart","q","hemisphere","decade","century","startOf_1","every_1","isDay","next","result","timezone_1","epochShift","found","hasDst","Boolean","default_offset","parseDst","change","back","summer","winter","isDST","methods","input$1","this","hasDST","unixFmt","leapYear","nearest","since","last","goto","isAwake","isAsleep","log","logYear","debug","from","fromNow","weekStart","inDST","round","each","methods_1","validate","confirm","want","_01Time","getMilliseconds","getSeconds","getMinutes","hourFloat","which","dayTime","times","morning","breakfast","noon","lunch","afternoon","evening","dinner","night","midnight","_02Date","getDay","clearMinutes","_03Year","sum","setDate","setYear","setHours","setMinutes","setMonth","thisOne","skipWeeks","methods$4","query","Space","order$1","keep","dstAwareUnits","keepDate","SpaceTime","rollMonth","minus","plus","print","same","compare","isEqual","isBetween","startEpoch","endEpoch","defineProperty","get","spacetime","whereIts_1","startHour","endHour","filter","main$1","extend","whereIts","version","plugin","src","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","concat","classIdSplit","notClassId","element","children","parts","part","type","charAt","substring","class","attrs","tag","flat","configurable","r","t","arguments","apply","writable","flatMap","map"],"mappings":"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","file":"0.js","sourcesContent":["function createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n['default'] || n;\n}\n\nvar fns = createCommonjsModule(function (module, exports) {\n//git:blame @JuliasCaesar https://www.timeanddate.com/date/leapyear.html\nexports.isLeapYear = year => (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n// unsurprisingly-nasty `typeof date` call\nexports.isDate = d => Object.prototype.toString.call(d) === '[object Date]' && !isNaN(d.valueOf());\nexports.isArray = input => Object.prototype.toString.call(input) === '[object Array]';\nexports.isObject = input => Object.prototype.toString.call(input) === '[object Object]';\n\nexports.zeroPad = (str, len = 2) => {\n  let pad = '0';\n  str = str + '';\n  return str.length >= len ? str : new Array(len - str.length + 1).join(pad) + str\n};\n\nexports.titleCase = str => {\n  if (!str) {\n    return ''\n  }\n  return str[0].toUpperCase() + str.substr(1)\n};\n\nexports.ordinal = i => {\n  let j = i % 10;\n  let k = i % 100;\n  if (j === 1 && k !== 11) {\n    return i + 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return i + 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return i + 'rd'\n  }\n  return i + 'th'\n};\n\n//strip 'st' off '1st'..\nexports.toCardinal = str => {\n  str = String(str);\n  str = str.replace(/([0-9])(st|nd|rd|th)$/i, '$1');\n  return parseInt(str, 10)\n};\n\n//used mostly for cleanup of unit names, like 'months'\nexports.normalize = (str = '') => {\n  str = str.toLowerCase().trim();\n  str = str.replace(/ies$/, 'y'); //'centuries'\n  str = str.replace(/s$/, '');\n  str = str.replace(/-/g, '');\n  if (str === 'day') {\n    return 'date'\n  }\n  return str\n};\n\nexports.getEpoch = tmp => {\n  //support epoch\n  if (typeof tmp === 'number') {\n    return tmp\n  }\n  //suport date objects\n  if (exports.isDate(tmp)) {\n    return tmp.getTime()\n  }\n  if (tmp.epoch) {\n    return tmp.epoch\n  }\n  return null\n};\n\n//make sure this input is a spacetime obj\nexports.beADate = (d, s) => {\n  if (exports.isObject(d) === false) {\n    return s.clone().set(d)\n  }\n  return d\n};\n\nexports.formatTimezone = (offset, delimiter = '') => {\n  const absOffset = Math.abs(offset);\n  const sign = offset > 0 ? '+' : '-';\n  return `${sign}${exports.zeroPad(absOffset)}${delimiter}00`\n};\n});\nvar fns_1 = fns.isLeapYear;\nvar fns_2 = fns.isDate;\nvar fns_3 = fns.isArray;\nvar fns_4 = fns.isObject;\nvar fns_5 = fns.zeroPad;\nvar fns_6 = fns.titleCase;\nvar fns_7 = fns.ordinal;\nvar fns_8 = fns.toCardinal;\nvar fns_9 = fns.normalize;\nvar fns_10 = fns.getEpoch;\nvar fns_11 = fns.beADate;\nvar fns_12 = fns.formatTimezone;\n\nconst zeroPad = fns.zeroPad;\n\nconst toString = d =>\n  zeroPad(d.getMonth() + 1) + '/' + zeroPad(d.getDate()) + ':' + zeroPad(d.getHours());\n\n// a timezone will begin with a specific offset in january\n// then some will switch to something else between november-march\nconst shouldChange = (epoch, start, end, defaultOffset) => {\n  //note: this has a cray order-of-operations issue\n  //we can't get the date, without knowing the timezone, and vice-versa\n  //it's possible that we can miss a dst-change by a few hours.\n  let d = new Date(epoch);\n  //(try to mediate this a little?)\n  let bias = d.getTimezoneOffset() || 0;\n  let shift = bias + defaultOffset * 60; //in minutes\n  shift = shift * 60 * 1000; //in ms\n  d = new Date(epoch + shift);\n\n  let current = toString(d);\n  //eg. is it after ~november?\n  if (current >= start) {\n    //eg. is it before ~march~ too?\n    if (current < end) {\n      return true\n    }\n  }\n  return false\n};\nvar summerTime = shouldChange;\n\n// this method avoids having to do a full dst-calculation on every operation\n// it reproduces some things in ./index.js, but speeds up spacetime considerably\nconst quickOffset = s => {\n  let zones = s.timezones;\n  let obj = zones[s.tz];\n  if (obj === undefined) {\n    console.warn(\"Warning: couldn't find timezone \" + s.tz);\n    return 0\n  }\n  if (obj.dst === undefined) {\n    return obj.offset\n  }\n\n  //get our two possible offsets\n  let jul = obj.offset;\n  let dec = obj.offset + 1; // assume it's the same for now\n  if (obj.hem === 'n') {\n    dec = jul - 1;\n  }\n  let split = obj.dst.split('->');\n  let inSummer = summerTime(s.epoch, split[0], split[1], jul);\n  if (inSummer === true) {\n    return jul\n  }\n  return dec\n};\nvar quick = quickOffset;\n\nvar _build = {\n\t\"9|s\": \"2/dili,2/jayapura\",\n\t\"9|n\": \"2/chita,2/khandyga,2/pyongyang,2/seoul,2/tokyo,11/palau\",\n\t\"9.5|s|04/07:03->10/06:02\": \"4/adelaide,4/broken_hill,4/south,4/yancowinna\",\n\t\"9.5|s\": \"4/darwin,4/north\",\n\t\"8|s\": \"12/casey,2/kuala_lumpur,2/makassar,2/singapore,4/perth,4/west\",\n\t\"8|n|03/25:03->09/29:23\": \"2/ulan_bator\",\n\t\"8|n\": \"2/brunei,2/choibalsan,2/chongqing,2/chungking,2/harbin,2/hong_kong,2/irkutsk,2/kuching,2/macao,2/macau,2/manila,2/shanghai,2/taipei,2/ujung_pandang,2/ulaanbaatar\",\n\t\"8.75|s\": \"4/eucla\",\n\t\"7|s\": \"12/davis,2/jakarta,9/christmas\",\n\t\"7|n\": \"2/bangkok,2/barnaul,2/ho_chi_minh,2/hovd,2/krasnoyarsk,2/novokuznetsk,2/novosibirsk,2/phnom_penh,2/pontianak,2/saigon,2/tomsk,2/vientiane\",\n\t\"6|s\": \"12/vostok\",\n\t\"6|n\": \"2/almaty,2/bishkek,2/dacca,2/dhaka,2/kashgar,2/omsk,2/qyzylorda,2/thimbu,2/thimphu,2/urumqi,9/chagos\",\n\t\"6.5|n\": \"2/rangoon,9/cocos\",\n\t\"5|s\": \"12/mawson,9/kerguelen\",\n\t\"5|n\": \"2/aqtau,2/aqtobe,2/ashgabat,2/ashkhabad,2/atyrau,2/baku,2/dushanbe,2/karachi,2/oral,2/samarkand,2/tashkent,2/yekaterinburg,9/maldives\",\n\t\"5.75|n\": \"2/kathmandu,2/katmandu\",\n\t\"5.5|n\": \"2/calcutta,2/colombo,2/kolkata\",\n\t\"4|s\": \"9/reunion\",\n\t\"4|n\": \"2/dubai,2/muscat,2/tbilisi,2/yerevan,8/astrakhan,8/samara,8/saratov,8/ulyanovsk,8/volgograd,2/volgograd,9/mahe,9/mauritius\",\n\t\"4.5|n|03/22:00->09/21:24\": \"2/tehran\",\n\t\"4.5|n\": \"2/kabul\",\n\t\"3|s\": \"12/syowa,9/antananarivo\",\n\t\"3|n|03/31:03->10/27:04\": \"2/nicosia,8/athens,8/bucharest,8/helsinki,8/kiev,8/mariehamn,8/nicosia,8/riga,8/sofia,8/tallinn,8/uzhgorod,8/vilnius,8/zaporozhye\",\n\t\"3|n|03/31:02->10/27:03\": \"8/chisinau,8/tiraspol\",\n\t\"3|n|03/31:00->10/26:24\": \"2/beirut\",\n\t\"3|n|03/29:02->10/27:02\": \"2/jerusalem,2/tel_aviv\",\n\t\"3|n|03/29:00->10/25:01\": \"2/amman\",\n\t\"3|n|03/29:00->10/24:24\": \"2/damascus\",\n\t\"3|n|03/23:01->10/26:01\": \"2/gaza,2/hebron\",\n\t\"3|n\": \"0/addis_ababa,0/asmara,0/asmera,0/dar_es_salaam,0/djibouti,0/juba,0/kampala,0/mogadishu,0/nairobi,2/aden,2/baghdad,2/bahrain,2/istanbul,2/kuwait,2/qatar,2/riyadh,8/istanbul,8/kirov,8/minsk,8/moscow,8/simferopol,9/comoro,9/mayotte\",\n\t\"2|s|03/31:02->10/27:02\": \"12/troll\",\n\t\"2|s\": \"0/gaborone,0/harare,0/johannesburg,0/lubumbashi,0/lusaka,0/maputo,0/maseru,0/mbabane\",\n\t\"2|n|03/31:02->10/27:03\": \"0/ceuta,arctic/longyearbyen,3/jan_mayen,8/amsterdam,8/andorra,8/belgrade,8/berlin,8/bratislava,8/brussels,8/budapest,8/busingen,8/copenhagen,8/gibraltar,8/ljubljana,8/luxembourg,8/madrid,8/malta,8/monaco,8/oslo,8/paris,8/podgorica,8/prague,8/rome,8/san_marino,8/sarajevo,8/skopje,8/stockholm,8/tirane,8/vaduz,8/vatican,8/vienna,8/warsaw,8/zagreb,8/zurich\",\n\t\"2|n\": \"0/blantyre,0/bujumbura,0/cairo,0/khartoum,0/kigali,0/tripoli,8/kaliningrad\",\n\t\"1|s|04/02:01->09/03:03\": \"0/windhoek\",\n\t\"1|s\": \"0/kinshasa,0/luanda\",\n\t\"1|n|05/05:03->06/09:02\": \"0/casablanca,0/el_aaiun\",\n\t\"1|n|03/31:01->10/27:02\": \"3/canary,3/faeroe,3/faroe,3/madeira,8/belfast,8/dublin,8/guernsey,8/isle_of_man,8/jersey,8/lisbon,8/london\",\n\t\"1|n\": \"0/algiers,0/bangui,0/brazzaville,0/douala,0/lagos,0/libreville,0/malabo,0/ndjamena,0/niamey,0/porto-novo,0/tunis\",\n\t\"14|n\": \"11/kiritimati\",\n\t\"13|s|04/07:04->09/29:03\": \"11/apia\",\n\t\"13|s|01/15:02->11/05:03\": \"11/tongatapu\",\n\t\"13|n\": \"11/enderbury,11/fakaofo\",\n\t\"12|s|04/07:03->09/29:02\": \"12/mcmurdo,12/south_pole,11/auckland\",\n\t\"12|s|01/13:03->11/03:02\": \"11/fiji\",\n\t\"12|n\": \"2/anadyr,2/kamchatka,2/srednekolymsk,11/funafuti,11/kwajalein,11/majuro,11/nauru,11/tarawa,11/wake,11/wallis\",\n\t\"12.75|s|04/07:03->04/07:02\": \"11/chatham\",\n\t\"11|s\": \"12/macquarie,11/bougainville\",\n\t\"11|n\": \"2/magadan,2/sakhalin,11/efate,11/guadalcanal,11/kosrae,11/noumea,11/pohnpei,11/ponape\",\n\t\"11.5|n\": \"11/norfolk\",\n\t\"10|s|04/07:03->10/06:02\": \"4/act,4/canberra,4/currie,4/hobart,4/melbourne,4/nsw,4/sydney,4/tasmania,4/victoria\",\n\t\"10|s\": \"12/dumontdurville,4/brisbane,4/lindeman,4/queensland\",\n\t\"10|n\": \"2/ust-nera,2/vladivostok,2/yakutsk,11/chuuk,11/guam,11/port_moresby,11/saipan,11/truk,11/yap\",\n\t\"10.5|s|04/07:01->10/06:02\": \"4/lhi,4/lord_howe\",\n\t\"0|n|03/31:00->10/27:01\": \"1/scoresbysund,3/azores\",\n\t\"0|n\": \"0/abidjan,0/accra,0/bamako,0/banjul,0/bissau,0/conakry,0/dakar,0/freetown,0/lome,0/monrovia,0/nouakchott,0/ouagadougou,0/sao_tome,0/timbuktu,1/danmarkshavn,3/reykjavik,3/st_helena,13/gmt,13/gmt+0,13/gmt-0,13/gmt0,13/greenwich,13/utc,13/universal,13/zulu\",\n\t\"-9|n|03/10:02->11/03:02\": \"1/adak,1/atka\",\n\t\"-9|n\": \"11/gambier\",\n\t\"-9.5|n\": \"11/marquesas\",\n\t\"-8|n|03/10:02->11/03:02\": \"1/anchorage,1/juneau,1/metlakatla,1/nome,1/sitka,1/yakutat\",\n\t\"-8|n\": \"11/pitcairn\",\n\t\"-7|n|03/10:02->11/03:02\": \"1/dawson,1/ensenada,1/los_angeles,1/santa_isabel,1/tijuana,1/vancouver,1/whitehorse,6/pacific,6/yukon,10/bajanorte\",\n\t\"-7|n\": \"1/creston,1/dawson_creek,1/hermosillo,1/phoenix\",\n\t\"-6|s|04/06:22->09/07:22\": \"7/easterisland,11/easter\",\n\t\"-6|n|04/07:02->10/27:02\": \"1/chihuahua,1/mazatlan,10/bajasur\",\n\t\"-6|n|03/10:02->11/03:02\": \"1/boise,1/cambridge_bay,1/denver,1/edmonton,1/inuvik,1/ojinaga,1/shiprock,1/yellowknife,6/mountain\",\n\t\"-6|n\": \"1/belize,1/costa_rica,1/el_salvador,1/guatemala,1/managua,1/regina,1/swift_current,1/tegucigalpa,6/east-saskatchewan,6/saskatchewan,11/galapagos\",\n\t\"-5|s\": \"1/lima,1/rio_branco,5/acre\",\n\t\"-5|n|04/07:02->10/27:02\": \"1/bahia_banderas,1/merida,1/mexico_city,1/monterrey,10/general\",\n\t\"-5|n|03/12:03->11/05:01\": \"1/north_dakota\",\n\t\"-5|n|03/10:02->11/03:02\": \"1/chicago,1/knox_in,1/matamoros,1/menominee,1/rainy_river,1/rankin_inlet,1/resolute,1/winnipeg,6/central\",\n\t\"-5|n\": \"1/atikokan,1/bogota,1/cancun,1/cayman,1/coral_harbour,1/eirunepe,1/guayaquil,1/jamaica,1/panama,1/porto_acre\",\n\t\"-4|s|05/13:23->08/13:01\": \"12/palmer\",\n\t\"-4|s|04/06:24->09/08:00\": \"1/santiago,7/continental\",\n\t\"-4|s|03/23:24->10/06:00\": \"1/asuncion\",\n\t\"-4|s|02/16:24->11/03:00\": \"1/campo_grande,1/cuiaba\",\n\t\"-4|s\": \"1/la_paz,1/manaus,5/west\",\n\t\"-4|n|03/12:03->11/05:01\": \"1/indiana,1/kentucky\",\n\t\"-4|n|03/10:02->11/03:02\": \"1/detroit,1/fort_wayne,1/grand_turk,1/indianapolis,1/iqaluit,1/louisville,1/montreal,1/nassau,1/new_york,1/nipigon,1/pangnirtung,1/port-au-prince,1/thunder_bay,1/toronto,6/eastern\",\n\t\"-4|n|03/10:00->11/03:01\": \"1/havana\",\n\t\"-4|n\": \"1/anguilla,1/antigua,1/aruba,1/barbados,1/blanc-sablon,1/boa_vista,1/caracas,1/curacao,1/dominica,1/grenada,1/guadeloupe,1/guyana,1/kralendijk,1/lower_princes,1/marigot,1/martinique,1/montserrat,1/port_of_spain,1/porto_velho,1/puerto_rico,1/santo_domingo,1/st_barthelemy,1/st_kitts,1/st_lucia,1/st_thomas,1/st_vincent,1/tortola,1/virgin\",\n\t\"-3|s|02/16:24->11/03:00\": \"1/sao_paulo,5/east\",\n\t\"-3|s\": \"1/argentina,1/buenos_aires,1/cordoba,1/fortaleza,1/montevideo,1/punta_arenas,12/rothera,3/stanley\",\n\t\"-3|n|03/10:02->11/03:02\": \"1/glace_bay,1/goose_bay,1/halifax,1/moncton,1/thule,3/bermuda,6/atlantic\",\n\t\"-3|n\": \"1/araguaina,1/bahia,1/belem,1/catamarca,1/cayenne,1/jujuy,1/maceio,1/mendoza,1/paramaribo,1/recife,1/rosario,1/santarem\",\n\t\"-2|s\": \"5/denoronha\",\n\t\"-2|n|03/30:22->10/26:23\": \"1/godthab\",\n\t\"-2|n|03/10:02->11/03:02\": \"1/miquelon\",\n\t\"-2|n\": \"1/noronha,3/south_georgia\",\n\t\"-2.5|n|03/10:02->11/03:02\": \"1/st_johns,6/newfoundland\",\n\t\"-1|n\": \"3/cape_verde\",\n\t\"-11|n\": \"11/midway,11/niue,11/pago_pago,11/samoa\",\n\t\"-10|n\": \"11/honolulu,11/johnston,11/rarotonga,11/tahiti\"\n};\n\nvar _build$1 = /*#__PURE__*/Object.freeze({\n\t'default': _build\n});\n\n//prefixes for iana names..\nvar _prefixes = [\n  'africa',\n  'america',\n  'asia',\n  'atlantic',\n  'australia',\n  'brazil',\n  'canada',\n  'chile',\n  'europe',\n  'indian',\n  'mexico',\n  'pacific',\n  'antarctica',\n  'etc'\n];\n\nvar data = getCjsExportFromNamespace(_build$1);\n\nlet all = {};\nObject.keys(data).forEach(k => {\n  let split = k.split('|');\n  let obj = {\n    offset: Number(split[0]),\n    hem: split[1]\n  };\n  if (split[2]) {\n    obj.dst = split[2];\n  }\n  let names = data[k].split(',');\n  names.forEach(str => {\n    str = str.replace(/(^[0-9]+)\\//, (before, num) => {\n      num = Number(num);\n      return _prefixes[num] + '/'\n    });\n    all[str] = obj;\n  });\n});\n\nall['utc'] = {\n  offset: 0,\n  hem: 'n' //(sorry)\n};\n\n//add etc/gmt+n\nfor (let i = -13; i <= 13; i += 0.5) {\n  let num = i;\n  if (num > 0) {\n    num = '+' + num;\n  }\n  let name = 'etc/gmt' + num;\n  all[name] = {\n    offset: i * -1, //they're negative!\n    hem: 'n' //(sorry)\n  };\n  name = 'utc/gmt' + num; //this one too, why not.\n  all[name] = {\n    offset: i * -1,\n    hem: 'n'\n  };\n}\n// console.log(all)\n\n// console.log(Object.keys(all).length)\nvar unpack = all;\n\n//find the implicit iana code for this machine.\n//safely query the Intl object\n//based on - https://bitbucket.org/pellepim/jstimezonedetect/src\nconst fallbackTZ = 'utc'; //\n\n//this Intl object is not supported often, yet\nconst safeIntl = () => {\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return null\n  }\n  let format = Intl.DateTimeFormat();\n  if (typeof format === 'undefined' || typeof format.resolvedOptions === 'undefined') {\n    return null\n  }\n  let timezone = format.resolvedOptions().timeZone;\n  if (!timezone) {\n    return null\n  }\n  return timezone.toLowerCase()\n};\n\nconst guessTz = () => {\n  let timezone = safeIntl();\n  if (timezone === null) {\n    return fallbackTZ\n  }\n  return timezone\n};\n//do it once per computer\nvar guessTz_1 = guessTz;\n\nconst isOffset = /(\\-?[0-9]+)h(rs)?/i;\nconst isNumber = /(\\-?[0-9]+)/;\nconst utcOffset = /utc([\\-+]?[0-9]+)/i;\nconst gmtOffset = /gmt([\\-+]?[0-9]+)/i;\n\nconst toIana = function(num) {\n  num = Number(num);\n  if (num > -13 && num < 13) {\n    num = num * -1; //it's opposite!\n    num = (num > 0 ? '+' : '') + num; //add plus sign\n    return 'etc/gmt' + num\n  }\n  return null\n};\n\nconst parseOffset = function(tz) {\n  // '+5hrs'\n  let m = tz.match(isOffset);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'utc+5'\n  m = tz.match(utcOffset);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'GMT-5' (not opposite)\n  m = tz.match(gmtOffset);\n  if (m !== null) {\n    let num = Number(m[1]) * -1;\n    return toIana(num)\n  }\n  // '+5'\n  m = tz.match(isNumber);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  return null\n};\nvar parseOffset_1 = parseOffset;\n\nconst local = guessTz_1();\n\n//add all the city names by themselves\nconst cities = Object.keys(unpack).reduce((h, k) => {\n  let city = k.split('/')[1] || '';\n  city = city.replace(/_/g, ' ');\n  h[city] = k;\n  return h\n}, {});\n\n//try to match these against iana form\nconst normalize = tz => {\n  tz = tz.replace(/ time/g, '');\n  tz = tz.replace(/ (standard|daylight|summer)/g, '');\n  tz = tz.replace(/\\b(east|west|north|south)ern/g, '$1');\n  tz = tz.replace(/\\b(africa|america|australia)n/g, '$1');\n  tz = tz.replace(/\\beuropean/g, 'europe');\n  tz = tz.replace(/\\islands/g, 'island');\n  return tz\n};\n\n// try our best to reconcile the timzone to this given string\nconst lookupTz = (str, zones) => {\n  if (!str) {\n    return local\n  }\n  let tz = str.trim();\n  let split = str.split('/');\n  //support long timezones like 'America/Argentina/Rio_Gallegos'\n  if (split.length > 2 && zones.hasOwnProperty(tz) === false) {\n    tz = split[0] + '/' + split[1];\n  }\n  tz = tz.toLowerCase();\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz\n  }\n  //lookup more loosely..\n  tz = normalize(tz);\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz\n  }\n  //try city-names\n  if (cities.hasOwnProperty(tz) === true) {\n    return cities[tz]\n  }\n  // //try to parse '-5h'\n  if (/[0-9]/.test(tz) === true) {\n    let id = parseOffset_1(tz);\n    if (id) {\n      return id\n    }\n  }\n\n  throw new Error(\n    \"Spacetime: Cannot find timezone named: '\" + str + \"'. Please enter an IANA timezone id.\"\n  )\n};\nvar find = lookupTz;\n\nlet o = {\n  millisecond: 1\n};\no.second = 1000;\no.minute = 60000;\no.hour = 3.6e6; // dst is supported post-hoc\no.day = 8.64e7; //\no.date = o.day;\no.month = 8.64e7 * 29.5; //(average)\no.week = 6.048e8;\no.year = 3.154e10; // leap-years are supported post-hoc\n//add plurals\nObject.keys(o).forEach(k => {\n  o[k + 's'] = o[k];\n});\nvar milliseconds = o;\n\n//basically, step-forward/backward until js Date object says we're there.\nconst walk = (s, n, fn, unit, previous) => {\n  let current = s.d[fn]();\n  if (current === n) {\n    return //already there\n  }\n  let startUnit = previous === null ? null : s.d[previous]();\n  let original = s.epoch;\n  //try to get it as close as we can\n  let diff = n - current;\n  s.epoch += milliseconds[unit] * diff;\n\n  //DST edge-case: if we are going many days, be a little conservative\n  if (unit === 'day' && Math.abs(diff) > 28) {\n    //but don't push it over a month\n    if (n < 28) {\n      s.epoch += milliseconds.hour;\n    }\n  }\n  //repair it if we've gone too far or something\n  //(go by half-steps, just in case)\n  const halfStep = milliseconds[unit] / 2;\n  while (s.d[fn]() < n) {\n    s.epoch += halfStep;\n  }\n  while (s.d[fn]() > n) {\n    s.epoch -= halfStep;\n  }\n  //oops, did we change previous unit? revert it.\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original;\n    // i mean, but make it close...\n    s.epoch += milliseconds[unit] * diff * 0.97; // i guess?\n  }\n};\n//find the desired date by a increment/check while loop\nconst units = {\n  year: {\n    valid: n => n > -4000 && n < 4000,\n    walkTo: (s, n) => walk(s, n, 'getFullYear', 'year', null)\n  },\n  month: {\n    valid: n => n >= 0 && n <= 11,\n    walkTo: (s, n) => {\n      let d = s.d;\n      let current = d.getMonth();\n      let original = s.epoch;\n      let startUnit = d.getYear();\n      if (current === n) {\n        return\n      }\n      //try to get it as close as we can..\n      let diff = n - current;\n      s.epoch += milliseconds.day * (diff * 28); //special case\n      //oops, did we change the year? revert it.\n      if (startUnit !== s.d.getYear()) {\n        s.epoch = original;\n      }\n      //incriment by day\n      while (s.d.getMonth() < n) {\n        s.epoch += milliseconds.day;\n      }\n      while (s.d.getMonth() > n) {\n        s.epoch -= milliseconds.day;\n      }\n    }\n  },\n  date: {\n    valid: n => n > 0 && n <= 31,\n    walkTo: (s, n) => walk(s, n, 'getDate', 'day', 'getMonth')\n  },\n  hour: {\n    valid: n => n >= 0 && n < 24,\n    walkTo: (s, n) => walk(s, n, 'getHours', 'hour', 'getDate')\n  },\n  minute: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => walk(s, n, 'getMinutes', 'minute', 'getHours')\n  },\n  second: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.seconds(n).epoch;\n    }\n  },\n  millisecond: {\n    valid: n => n >= 0 && n < 1000,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.milliseconds(n).epoch;\n    }\n  }\n};\n\nconst walkTo = (s, wants) => {\n  let keys = Object.keys(units);\n  let old = s.clone();\n  for (let i = 0; i < keys.length; i++) {\n    let k = keys[i];\n    let n = wants[k];\n    if (n === undefined) {\n      n = old[k]();\n    }\n    if (typeof n === 'string') {\n      n = parseInt(n, 10);\n    }\n    //make-sure it's valid\n    if (!units[k].valid(n)) {\n      s.epoch = null;\n      if (s.silent === false) {\n        console.warn('invalid ' + k + ': ' + n);\n      }\n      return\n    }\n    // console.log(k, n)\n    units[k].walkTo(s, n);\n  }\n  return\n};\n\nvar walk_1 = walkTo;\n\nlet shortMonths = [\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'may',\n  'jun',\n  'jul',\n  'aug',\n  'sept',\n  'oct',\n  'nov',\n  'dec'\n];\nlet longMonths = [\n  'january',\n  'february',\n  'march',\n  'april',\n  'may',\n  'june',\n  'july',\n  'august',\n  'september',\n  'october',\n  'november',\n  'december'\n];\n\nfunction buildMapping() {\n  const obj = {\n    sep: 8 //support this format\n  };\n  for (let i = 0; i < shortMonths.length; i++) {\n    obj[shortMonths[i]] = i;\n  }\n  for (let i = 0; i < longMonths.length; i++) {\n    obj[longMonths[i]] = i;\n  }\n  return obj\n}\n\nvar months = {\n  short: () => shortMonths,\n  long: () => longMonths,\n  mapping: () => buildMapping(),\n  set: i18n => {\n    shortMonths = i18n.short || shortMonths;\n    longMonths = i18n.long || longMonths;\n  }\n};\n\n//pull-apart ISO offsets, like \"+0100\"\nconst parseOffset$1 = (s, offset) => {\n  if (!offset) {\n    return s\n  }\n  //this is a fancy-move\n  if (offset === 'Z') {\n    offset = '+0000';\n  }\n\n  // according to ISO8601, tz could be hh:mm, hhmm or hh\n  // so need few more steps before the calculation.\n  let num = 0;\n\n  // for (+-)hh:mm\n  if (/^[\\+-]?[0-9]{2}:[0-9]{2}$/.test(offset)) {\n    //support \"+01:00\"\n    if (/:00/.test(offset) === true) {\n      offset = offset.replace(/:00/, '');\n    }\n    //support \"+01:30\"\n    if (/:30/.test(offset) === true) {\n      offset = offset.replace(/:30/, '.5');\n    }\n  }\n\n  // for (+-)hhmm\n  if (/^[\\+-]?[0-9]{4}$/.test(offset)) {\n    offset = offset.replace(/30$/, '.5');\n  }\n\n  num = parseFloat(offset);\n\n  //divide by 100 or 10 - , \"+0100\", \"+01\"\n  if (Math.abs(num) > 100) {\n    num = num / 100;\n  }\n  //okay, try to match it to a utc timezone\n  //remember - this is opposite! a -5 offset maps to Etc/GMT+5  ¯\\_(:/)_/¯\n  //https://askubuntu.com/questions/519550/why-is-the-8-timezone-called-gmt-8-in-the-filesystem\n  num *= -1;\n\n  if (num >= 0) {\n    num = '+' + num;\n  }\n  let tz = 'etc/gmt' + num;\n  let zones = s.timezones;\n\n  if (zones[tz]) {\n    // log a warning if we're over-writing a given timezone?\n    // console.log('changing timezone to: ' + tz)\n    s.tz = tz;\n  }\n  return s\n};\nvar parseOffset_1$1 = parseOffset$1;\n\nconst parseTime = (s, str = '') => {\n  str = str.replace(/^\\s+/, '').toLowerCase(); //trim\n  //formal time formats - 04:30.23\n  let arr = str.match(/([0-9]{1,2}):([0-9]{1,2}):?([0-9]{1,2})?[:\\.]?([0-9]{1,4})?/);\n  if (arr !== null) {\n    //validate it a little\n    let h = Number(arr[1]);\n    if (h < 0 || h > 24) {\n      return s.startOf('day')\n    }\n    let m = Number(arr[2]); //don't accept '5:3pm'\n    if (arr[2].length < 2 || m < 0 || m > 59) {\n      return s.startOf('day')\n    }\n    s = s.hour(h);\n    s = s.minute(m);\n    s = s.seconds(arr[3] || 0);\n    s = s.millisecond(arr[4] || 0);\n    //parse-out am/pm\n    let ampm = str.match(/[\\b0-9](am|pm)\\b/);\n    if (ampm !== null && ampm[1]) {\n      s = s.ampm(ampm[1]);\n    }\n    return s\n  }\n  //try an informal form - 5pm (no minutes)\n  arr = str.match(/([0-9]+) ?(am|pm)/);\n  if (arr !== null && arr[1]) {\n    let h = Number(arr[1]);\n    //validate it a little..\n    if (h > 12 || h < 1) {\n      return s.startOf('day')\n    }\n    s = s.hour(arr[1] || 0);\n    s = s.ampm(arr[2]);\n    s = s.startOf('hour');\n    return s\n  }\n  //no time info found, use start-of-day\n  s = s.startOf('day');\n  return s\n};\nvar parseTime_1 = parseTime;\n\nconst monthLengths = [\n  31, // January - 31 days\n  28, // February - 28 days in a common year and 29 days in leap years\n  31, // March - 31 days\n  30, // April - 30 days\n  31, // May - 31 days\n  30, // June - 30 days\n  31, // July - 31 days\n  31, // August - 31 days\n  30, // September - 30 days\n  31, // October - 31 days\n  30, // November - 30 days\n  31 // December - 31 days\n];\nvar monthLengths_1 = monthLengths;\n\nconst isLeapYear = fns.isLeapYear;\n\n//given a month, return whether day number exists in it\nconst hasDate = obj => {\n  //invalid values\n  if (monthLengths_1.hasOwnProperty(obj.month) !== true) {\n    return false\n  }\n  //support leap-year in february\n  if (obj.month === 1) {\n    if (isLeapYear(obj.year) && obj.date <= 29) {\n      return true\n    } else {\n      return obj.date <= 28\n    }\n  }\n  //is this date too-big for this month?\n  let max = monthLengths_1[obj.month] || 0;\n  if (obj.date <= max) {\n    return true\n  }\n  return false\n};\nvar hasDate_1 = hasDate;\n\nconst months$1 = months.mapping();\n\n\n\n\n\nconst parseYear = (str = '') => {\n  //support '18 -> 2018\n  // str = str.replace(/^'([0-9]{2})/, '20$1')\n  // str = str.replace('([0-9]+) ?b\\.?c\\.?$', '-$1')\n  let year = parseInt(str.trim(), 10);\n  year = year || new Date().getFullYear();\n  return year\n};\n\nconst strFmt = [\n  //iso-this 1998-05-30T22:00:00:000Z, iso-that 2017-04-03T08:00:00-0700\n  {\n    reg: /^(\\-?0?0?[0-9]{3,4})-([0-9]{1,2})-([0-9]{1,2})[T| ]([0-9.:]+)(Z|[0-9\\-\\+:]+)?$/,\n    parse: (s, arr, givenTz, options) => {\n      let month = parseInt(arr[2], 10) - 1;\n      let obj = {\n        year: arr[1],\n        month,\n        date: arr[3]\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      parseOffset_1$1(s, arr[5]);\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //iso \"2015-03-25\" or \"2015/03/25\" //0-based-months!\n  {\n    reg: /^([0-9]{4})[\\-\\/]([0-9]{1,2})[\\-\\/]([0-9]{1,2})$/,\n    parse: (s, arr) => {\n      let obj = {\n        year: arr[1],\n        month: parseInt(arr[2], 10) - 1,\n        date: parseInt(arr[3], 10)\n      };\n      if (obj.month >= 12) {\n        //support yyyy/dd/mm (weird, but ok)\n        obj.date = parseInt(arr[2], 10);\n        obj.month = parseInt(arr[3], 10) - 1;\n      }\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  },\n  //short - uk \"03/25/2015\"  //0-based-months!\n  {\n    reg: /^([0-9]{1,2})[\\-\\/]([0-9]{1,2})[\\-\\/]?([0-9]{4})?$/,\n    parse: (s, arr) => {\n      let month = parseInt(arr[1], 10) - 1;\n      let date = parseInt(arr[2], 10);\n      if (month >= 12) {\n        //support yyyy/dd/mm (weird, but ok)\n        month = parseInt(arr[2], 10) - 1;\n        date = parseInt(arr[1], 10);\n      }\n      let year = arr[3] || new Date().getFullYear();\n      let obj = {\n        year,\n        month,\n        date\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  },\n  //Long \"Mar 25 2015\"\n  //February 22, 2017 15:30:00\n  {\n    reg: /^([a-z]+) ([0-9]{1,2}(?:st|nd|rd|th)?),?( [0-9]{4})?( ([0-9:]+( ?am| ?pm)?))?$/i,\n    parse: (s, arr) => {\n      let month = months$1[arr[1].toLowerCase()];\n      let year = parseYear(arr[3]);\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[2] || '')\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //February 2017 (implied date)\n  {\n    reg: /^([a-z]+) ([0-9]{4})$/i,\n    parse: (s, arr) => {\n      let month = months$1[arr[1].toLowerCase()];\n      let year = parseYear(arr[2]);\n      let obj = {\n        year,\n        month,\n        date: 1\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s, arr[4]);\n      return s\n    }\n  },\n  //Long \"25 Mar 2015\"\n  {\n    reg: /^([0-9]{1,2}(?:st|nd|rd|th)?) ([a-z]+),?( [0-9]{4})?$/i,\n    parse: (s, arr) => {\n      let month = months$1[arr[2].toLowerCase()];\n      let year = parseYear(arr[3]);\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[1])\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  },\n  {\n    // '1992'\n    reg: /^[0-9]{4}$/i,\n    parse: (s, arr) => {\n      let year = parseYear(arr[0]);\n      let d = new Date();\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  },\n  {\n    // '200bc'\n    reg: /^[0-9,]+ ?b\\.?c\\.?$/i,\n    parse: (s, arr) => {\n      let str = arr[0] || '';\n      //make negative-year\n      str = str.replace(/^([0-9,]+) ?b\\.?c\\.?$/i, '-$1');\n      //remove commas\n      str = str.replace(/,/g, '');\n      let year = parseInt(str.trim(), 10);\n      let d = new Date();\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      };\n      if (hasDate_1(obj) === false) {\n        s.epoch = null;\n        return s\n      }\n      walk_1(s, obj);\n      s = parseTime_1(s);\n      return s\n    }\n  }\n];\n\nvar strParse = strFmt;\n\nconst dates = {\n  now: s => {\n    s.epoch = Date.now();\n    return s\n  },\n  tonight: s => {\n    s.epoch = Date.now();\n    s = s.hour(18);\n    return s\n  },\n  today: s => {\n    s.epoch = Date.now();\n    return s\n  },\n  tomorrow: s => {\n    s.epoch = Date.now();\n    s = s.add(1, 'day');\n    s = s.startOf('day');\n    return s\n  },\n  yesterday: s => {\n    s.epoch = Date.now();\n    s = s.subtract(1, 'day');\n    s = s.startOf('day');\n    return s\n  },\n  christmas: s => {\n    let year = new Date().getFullYear();\n    s = s.set([year, 11, 25, 18, 0, 0]); // Dec 25\n    return s\n  },\n  'new years': s => {\n    let year = new Date().getFullYear();\n    s = s.set([year, 11, 31, 18, 0, 0]); // Dec 31\n    return s\n  }\n};\ndates['new years eve'] = dates['new years'];\nvar namedDates = dates;\n\n//we have to actually parse these inputs ourselves\n//  -  can't use built-in js parser ;(\n//=========================================\n// ISO Date\t  \"2015-03-25\"\n// Short Date\t\"03/25/2015\" or \"2015/03/25\"\n// Long Date\t\"Mar 25 2015\" or \"25 Mar 2015\"\n// Full Date\t\"Wednesday March 25 2015\"\n//=========================================\n\n//-- also -\n// if the given epoch is really small, they've probably given seconds and not milliseconds\n// anything below this number is likely (but not necessarily) a mistaken input.\n// this may seem like an arbitrary number, but it's 'within jan 1970'\n// this is only really ambiguous until 2054 or so\nconst minimumEpoch = 2500000000;\n\nconst defaults = {\n  year: new Date().getFullYear(),\n  month: 0,\n  date: 1\n};\n\n//support [2016, 03, 01] format\nconst handleArray = (s, arr) => {\n  let order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n  for (let i = 0; i < order.length; i++) {\n    let num = arr[i] || defaults[order[i]] || 0;\n    s = s[order[i]](num);\n  }\n  return s\n};\n//support {year:2016, month:3} format\nconst handleObject = (s, obj) => {\n  obj = Object.assign({}, defaults, obj);\n  let keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    let unit = keys[i];\n    //make sure we have this method\n    if (s[unit] === undefined || typeof s[unit] !== 'function') {\n      continue\n    }\n    //make sure the value is a number\n    if (obj[unit] === null || obj[unit] === undefined || obj[unit] === '') {\n      continue\n    }\n    let num = obj[unit] || defaults[unit] || 0;\n    s = s[unit](num);\n  }\n  return s\n};\n\n//find the epoch from different input styles\nconst parseInput = (s, input, givenTz) => {\n  //if we've been given a epoch number, it's easy\n  if (typeof input === 'number') {\n    if (input > 0 && input < minimumEpoch && s.silent === false) {\n      console.warn('  - Warning: You are setting the date to January 1970.');\n      console.warn('       -   did input seconds instead of milliseconds?');\n    }\n    s.epoch = input;\n    return s\n  }\n  //set tmp time\n  s.epoch = Date.now();\n  if (input === null || input === undefined) {\n    return s //k, we're good.\n  }\n  //support input of Date() object\n  if (fns.isDate(input) === true) {\n    s.epoch = input.getTime();\n    return s\n  }\n  //support [2016, 03, 01] format\n  if (fns.isArray(input) === true) {\n    s = handleArray(s, input);\n    return s\n  }\n  //support {year:2016, month:3} format\n  if (fns.isObject(input) === true) {\n    //support spacetime object as input\n    if (input.epoch) {\n      s.epoch = input.epoch;\n      s.tz = input.tz;\n      return s\n    }\n    s = handleObject(s, input);\n    return s\n  }\n  //input as a string..\n  if (typeof input !== 'string') {\n    return s\n  }\n  //little cleanup..\n  input = input.replace(/\\b(mon|tues|wed|wednes|thu|thurs|fri|sat|satur|sun)(day)?\\b/i, '');\n  input = input.replace(/,/g, '');\n  input = input.replace(/ +/g, ' ').trim();\n  //try some known-words, like 'now'\n  if (namedDates.hasOwnProperty(input) === true) {\n    s = namedDates[input](s);\n    return s\n  }\n  //try each text-parse template, use the first good result\n  for (let i = 0; i < strParse.length; i++) {\n    let m = input.match(strParse[i].reg);\n    if (m) {\n      s = strParse[i].parse(s, m, givenTz);\n      return s\n    }\n  }\n  if (s.silent === false) {\n    console.warn(\"Warning: couldn't parse date-string: '\" + input + \"'\");\n  }\n  s.epoch = null;\n  return s\n};\nvar input = parseInput;\n\nlet shortDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nlet longDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n\nvar days = {\n  short: () => shortDays,\n  long: () => longDays,\n  set: i18n => {\n    shortDays = i18n.short || shortDays;\n    longDays = i18n.long || longDays;\n  }\n};\n\n// create the timezone offset part of an iso timestamp\n// it's kind of nuts how involved this is\n// \"+01:00\", \"+0100\", or simply \"+01\"\nconst isoOffset = s => {\n  let offset = s.timezone().current.offset;\n  const isNegative = offset < 0;\n  let minute = '00';\n  //handle 5.5 → '5:30'\n  if (Math.abs(offset % 1) === 0.5) {\n    minute = '30';\n    if (offset >= 0) {\n      offset = Math.floor(offset);\n    } else {\n      offset = Math.ceil(offset);\n    }\n  }\n  if (isNegative) {\n    //handle negative sign\n    offset *= -1;\n    offset = fns.zeroPad(offset, 2);\n    offset = '-' + offset;\n  } else {\n    offset = fns.zeroPad(offset, 2);\n    offset = '+' + offset;\n  }\n  offset = offset + ':' + minute;\n  //'Z' means 00\n  if (offset === '+00:00') {\n    offset = 'Z';\n  }\n  return offset\n};\n\nvar _offset = isoOffset;\n\nconst format = {\n  day: s => fns.titleCase(s.dayName()),\n  'day-short': s => fns.titleCase(days.short()[s.day()]),\n  'day-number': s => s.day(),\n  'day-ordinal': s => fns.ordinal(s.day()),\n  'day-pad': s => fns.zeroPad(s.day()),\n\n  date: s => s.date(),\n  'date-ordinal': s => fns.ordinal(s.date()),\n  'date-pad': s => fns.zeroPad(s.date()),\n\n  month: s => fns.titleCase(s.monthName()),\n  'month-short': s => fns.titleCase(months.short()[s.month()]),\n  'month-number': s => s.month(),\n  'month-ordinal': s => fns.ordinal(s.month()),\n  'month-pad': s => fns.zeroPad(s.month()),\n  'iso-month': s => fns.zeroPad(s.month() + 1), //1-based months\n\n  year: s => {\n    let year = s.year();\n    if (year > 0) {\n      return year\n    }\n    year = Math.abs(year);\n    return year + ' BC'\n  },\n  'year-short': s => {\n    let year = s.year();\n    if (year > 0) {\n      return `'${String(s.year()).substr(2, 4)}`\n    }\n    year = Math.abs(year);\n    return year + ' BC'\n  },\n  'iso-year': s => {\n    let year = s.year();\n    let isNegative = year < 0;\n    let str = fns.zeroPad(Math.abs(year), 4); //0-padded\n    if (isNegative) {\n      //negative years are for some reason 6-digits ('-00008')\n      str = fns.zeroPad(str, 6);\n      str = '-' + str;\n    }\n    return str\n  },\n\n  time: s => s.time(),\n  'time-24': s => `${s.hour24()}:${fns.zeroPad(s.minute())}`,\n  hour: s => s.hour12(),\n  'hour-pad': s => fns.zeroPad(s.hour12()),\n  'hour-24': s => s.hour24(),\n  'hour-24-pad': s => fns.zeroPad(s.hour24()),\n\n  minute: s => s.minute(),\n  'minute-pad': s => fns.zeroPad(s.minute()),\n  second: s => s.second(),\n  'second-pad': s => fns.zeroPad(s.second()),\n\n  ampm: s => s.ampm(),\n  quarter: s => 'Q' + s.quarter(),\n  season: s => s.season(),\n  era: s => s.era(),\n  timezone: s => s.timezone().name,\n  offset: s => _offset(s),\n\n  numeric: s => `${s.year()}/${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}`, // yyyy/mm/dd\n  'numeric-us': s => `${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}/${s.year()}`, // mm/dd/yyyy\n  'numeric-uk': s => `${fns.zeroPad(s.date())}/${fns.zeroPad(s.month() + 1)}/${s.year()}`, //dd/mm/yyyy\n  'mm/dd': s => `${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}`, //mm/dd\n\n  // ... https://en.wikipedia.org/wiki/ISO_8601 ;(((\n  iso: s => {\n    let year = s.format('iso-year');\n    let month = fns.zeroPad(s.month() + 1); //1-based months\n    let date = fns.zeroPad(s.date());\n    let hour = fns.zeroPad(s.h24());\n    let minute = fns.zeroPad(s.minute());\n    let second = fns.zeroPad(s.second());\n    let ms = fns.zeroPad(s.millisecond(), 3);\n    let offset = _offset(s);\n    return `${year}-${month}-${date}T${hour}:${minute}:${second}.${ms}${offset}` //2018-03-09T08:50:00.000-05:00\n  },\n  'iso-short': s => {\n    let month = fns.zeroPad(s.month() + 1); //1-based months\n    let date = fns.zeroPad(s.date());\n    return `${s.year()}-${month}-${date}` //2017-02-15\n  },\n  'iso-utc': s => {\n    return new Date(s.epoch).toISOString() //2017-03-08T19:45:28.367Z\n  },\n\n  //i made these up\n  nice: s => `${months.short()[s.month()]} ${fns.ordinal(s.date())}, ${s.time()}`,\n  'nice-year': s => `${months.short()[s.month()]} ${fns.ordinal(s.date())}, ${s.year()}`,\n  'nice-day': s =>\n    `${days.short()[s.day()]} ${fns.titleCase(months.short()[s.month()])} ${fns.ordinal(s.date())}`,\n  'nice-full': s =>\n    `${s.dayName()} ${fns.titleCase(s.monthName())} ${fns.ordinal(s.date())}, ${s.time()}`\n};\n//aliases\nconst aliases = {\n  'day-name': 'day',\n  'month-name': 'month',\n  'iso 8601': 'iso',\n  'time-h24': 'time-24',\n  'time-12': 'time',\n  'time-h12': 'time',\n  tz: 'timezone',\n  'day-num': 'day-number',\n  'month-num': 'month-number',\n  'month-iso': 'iso-month',\n  'year-iso': 'iso-year',\n  'nice-short': 'nice',\n  mdy: 'numeric-us',\n  dmy: 'numeric-uk',\n  ymd: 'numeric',\n  'yyyy/mm/dd': 'numeric',\n  'mm/dd/yyyy': 'numeric-us',\n  'dd/mm/yyyy': 'numeric-us',\n  'little-endian': 'numeric-uk',\n  'big-endian': 'numeric',\n  'day-nice': 'nice-day'\n};\nObject.keys(aliases).forEach(k => (format[k] = format[aliases[k]]));\n\nconst printFormat = (s, str = '') => {\n  //don't print anything if it's an invalid date\n  if (s.isValid() !== true) {\n    return ''\n  }\n  //support .format('month')\n  if (format.hasOwnProperty(str)) {\n    let out = String(format[str](s) || '');\n    if (str !== 'ampm') {\n      out = fns.titleCase(out);\n    }\n    return out\n  }\n  //support '{hour}:{minute}' notation\n  if (str.indexOf('{') !== -1) {\n    let sections = /\\{(.+?)\\}/g;\n    str = str.replace(sections, (_, fmt) => {\n      fmt = fmt.toLowerCase().trim();\n      if (format.hasOwnProperty(fmt)) {\n        return String(format[fmt](s) || '')\n      }\n      return ''\n    });\n    return str\n  }\n\n  return s.format('iso-short')\n};\nvar format_1 = printFormat;\n\nconst pad = fns.zeroPad;\nconst formatTimezone = fns.formatTimezone;\n//parse this insane unix-time-templating thing, from the 19th century\n//http://unicode.org/reports/tr35/tr35-25.html#Date_Format_Patterns\n\n//time-symbols we support\nconst mapping = {\n  G: s => s.era(),\n  GG: s => s.era(),\n  GGG: s => s.era(),\n  GGGG: s => (s.era() === 'AD' ? 'Anno Domini' : 'Before Christ'),\n  //year\n  y: s => s.year(),\n  yy: s => {\n    //last two chars\n    return parseInt(String(s.year()).substr(2, 4), 10)\n  },\n  yyy: s => s.year(),\n  yyyy: s => s.year(),\n  yyyyy: s => '0' + s.year(),\n  // u: (s) => {},//extended non-gregorian years\n\n  //quarter\n  Q: s => s.quarter(),\n  QQ: s => s.quarter(),\n  QQQ: s => s.quarter(),\n  QQQQ: s => s.quarter(),\n\n  //month\n  M: s => s.month() + 1,\n  MM: s => pad(s.month() + 1),\n  MMM: s => s.format('month-short'),\n  MMMM: s => s.format('month'),\n\n  //week\n  w: s => s.week(),\n  ww: s => pad(s.week()),\n  //week of month\n  // W: (s) => s.week(),\n\n  //date of month\n  d: s => s.date(),\n  dd: s => pad(s.date()),\n  //date of year\n  D: s => s.dayOfYear(),\n  DD: s => pad(s.dayOfYear()),\n  DDD: s => pad(s.dayOfYear(), 3),\n\n  // F: (s) => {},//date of week in month\n  // g: (s) => {},//modified julian day\n\n  //day\n  E: s => s.format('day-short'),\n  EE: s => s.format('day-short'),\n  EEE: s => s.format('day-short'),\n  EEEE: s => s.format('day'),\n  EEEEE: s => s.format('day')[0],\n  e: s => s.day(),\n  ee: s => s.day(),\n  eee: s => s.format('day-short'),\n  eeee: s => s.format('day'),\n  eeeee: s => s.format('day')[0],\n\n  //am/pm\n  a: s => s.ampm().toUpperCase(),\n  aa: s => s.ampm().toUpperCase(),\n  aaa: s => s.ampm().toUpperCase(),\n  aaaa: s => s.ampm().toUpperCase(),\n\n  //hour\n  h: s => s.h12(),\n  hh: s => pad(s.h12()),\n  H: s => s.hour(),\n  HH: s => pad(s.hour()),\n  // j: (s) => {},//weird hour format\n\n  m: s => s.minute(),\n  mm: s => pad(s.minute()),\n  s: s => s.second(),\n  ss: s => pad(s.second()),\n  //milliseconds in the day\n  A: s => s.epoch - s.startOf('day').epoch,\n  //timezone\n  z: s => s.timezone().name,\n  zz: s => s.timezone().name,\n  zzz: s => s.timezone().name,\n  zzzz: s => s.timezone().name,\n  Z: s => formatTimezone(s.timezone().current.offset),\n  ZZ: s => formatTimezone(s.timezone().current.offset),\n  ZZZ: s => formatTimezone(s.timezone().current.offset),\n  ZZZZ: s => formatTimezone(s.timezone().current.offset, ':')\n};\n\nconst addAlias = (char, to, n) => {\n  let name = char;\n  let toName = to;\n  for (let i = 0; i < n; i += 1) {\n    mapping[name] = mapping[toName];\n    name += char;\n    toName += to;\n  }\n};\naddAlias('q', 'Q', 4);\naddAlias('L', 'M', 4);\naddAlias('Y', 'y', 4);\naddAlias('c', 'e', 4);\naddAlias('k', 'H', 2);\naddAlias('K', 'h', 2);\naddAlias('S', 's', 2);\naddAlias('v', 'z', 4);\naddAlias('V', 'Z', 4);\n\nconst unixFmt = (s, str) => {\n  let chars = str.split('');\n  //combine consecutive chars, like 'yyyy' as one.\n  let arr = [chars[0]];\n  let quoteOn = false;\n  for (let i = 1; i < chars.length; i += 1) {\n    //support quoted substrings\n    if (chars[i] === `'`) {\n      quoteOn = !quoteOn;\n      //support '', meaning one tick\n      if (quoteOn === true && chars[i + 1] && chars[i + 1] === \"'\") {\n        quoteOn = true;\n      } else {\n        continue\n      }\n    }\n    //merge it with the last one\n    if (quoteOn === true || chars[i] === arr[arr.length - 1][0]) {\n      arr[arr.length - 1] += chars[i];\n    } else {\n      arr.push(chars[i]);\n    }\n  }\n  return arr.reduce((txt, c) => {\n    if (mapping[c] !== undefined) {\n      txt += mapping[c](s) || '';\n    } else {\n      txt += c;\n    }\n    return txt\n  }, '')\n};\nvar unixFmt_1 = unixFmt;\n\nconst units$1 = ['year', 'season', 'quarter', 'month', 'week', 'day', 'quarterHour', 'hour', 'minute'];\n\nconst doUnit = function(s, k) {\n  let start = s.clone().startOf(k);\n  let end = s.clone().endOf(k);\n  let duration = end.epoch - start.epoch;\n  let percent = (s.epoch - start.epoch) / duration;\n  return parseFloat(percent.toFixed(2))\n};\n\n//how far it is along, from 0-1\nconst progress = (s, unit) => {\n  if (unit) {\n    unit = fns.normalize(unit);\n    return doUnit(s, unit)\n  }\n  let obj = {};\n  units$1.forEach(k => {\n    obj[k] = doUnit(s, k);\n  });\n  return obj\n};\n\nvar progress_1 = progress;\n\n//round to either current, or +1 of this unit\nconst nearest = (s, unit) => {\n  //how far have we gone?\n  let prog = s.progress();\n  unit = fns.normalize(unit);\n  //fix camel-case for this one\n  if (unit === 'quarterhour') {\n    unit = 'quarterHour';\n  }\n  if (prog[unit] !== undefined) {\n    // go forward one?\n    if (prog[unit] > 0.5) {\n      s = s.add(1, unit);\n    }\n    // go to start\n    s = s.startOf(unit);\n  } else if (s.silent === false) {\n    console.warn(\"no known unit '\" + unit + \"'\");\n  }\n  return s\n};\nvar nearest_1 = nearest;\n\n//increment until dates are the same\nconst climb = (a, b, unit) => {\n  let i = 0;\n  a = a.clone();\n  while (a.isBefore(b)) {\n    //do proper, expensive increment to catch all-the-tricks\n    a = a.add(1, unit);\n    i += 1;\n  }\n  //oops, we went too-far..\n  if (a.isAfter(b, unit)) {\n    i -= 1;\n  }\n  return i\n};\n\n// do a thurough +=1 on the unit, until they match\n// for speed-reasons, only used on day, month, week.\nconst diffOne = (a, b, unit) => {\n  if (a.isBefore(b)) {\n    return climb(a, b, unit)\n  } else {\n    return climb(b, a, unit) * -1 //reverse it\n  }\n};\n\nvar one = diffOne;\n\n// don't do anything too fancy here.\n// 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\nconst fastYear = (a, b) => {\n  let years = b.year() - a.year();\n  // should we decrement it by 1?\n  a = a.year(b.year());\n  if (a.isAfter(b)) {\n    years -= 1;\n  }\n  return years\n};\n\n// use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\nconst diff = function(a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  let msDiff = b.epoch - a.epoch;\n  let obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  };\n  obj.minutes = parseInt(obj.seconds / 60, 10);\n  obj.hours = parseInt(obj.minutes / 60, 10);\n\n  //do the year\n  let tmp = a.clone();\n  obj.years = fastYear(tmp, b);\n  tmp = a.add(obj.years, 'year');\n\n  //there's always 12 months in a year...\n  obj.months = obj.years * 12;\n  tmp = a.add(obj.months, 'month');\n  obj.months += one(tmp, b, 'month');\n\n  // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n  obj.weeks = obj.years * 52;\n  tmp = a.add(obj.weeks, 'week');\n  obj.weeks += one(tmp, b, 'week');\n\n  // there's always atleast 7 days in a week\n  obj.days = obj.weeks * 7;\n  tmp = a.add(obj.days, 'day');\n  obj.days += one(tmp, b, 'day');\n\n  return obj\n};\nvar waterfall = diff;\n\nconst reverseDiff = function(obj) {\n  Object.keys(obj).forEach(k => {\n    obj[k] *= -1;\n  });\n  return obj\n};\n\n// this method counts a total # of each unit, between a, b.\n// '1 month' means 28 days in february\n// '1 year' means 366 days in a leap year\nconst main = function(a, b, unit) {\n  b = fns.beADate(b, a);\n  //reverse values, if necessary\n  let reversed = false;\n  if (a.isAfter(b)) {\n    let tmp = a;\n    a = b;\n    b = tmp;\n    reversed = true;\n  }\n  //compute them all (i know!)\n  let obj = waterfall(a, b);\n  if (reversed) {\n    obj = reverseDiff(obj);\n  }\n  //return just the requested unit\n  if (unit) {\n    //make sure it's plural-form\n    unit = fns.normalize(unit);\n    if (/s$/.test(unit) !== true) {\n      unit += 's';\n    }\n    if (unit === 'dates') {\n      unit = 'days';\n    }\n    return obj[unit]\n  }\n  return obj\n};\n\nvar diff$1 = main;\n\n//by spencermountain + Shaun Grady\n\n//our conceptual 'break-points' for each unit\nconst qualifiers = {\n  months: {\n    almost: 10,\n    over: 4\n  },\n  days: {\n    almost: 25,\n    over: 10\n  },\n  hours: {\n    almost: 20,\n    over: 8\n  },\n  minutes: {\n    almost: 50,\n    over: 20\n  },\n  seconds: {\n    almost: 50,\n    over: 20\n  }\n};\n\n//get number of hours/minutes... between the two dates\nfunction getDiff(a, b) {\n  const isBefore = a.isBefore(b);\n  const later = isBefore ? b : a;\n  let earlier = isBefore ? a : b;\n  earlier = earlier.clone();\n  const diff = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  Object.keys(diff).forEach(unit => {\n    if (earlier.isSame(later, unit)) {\n      return\n    }\n    let max = earlier.diff(later, unit);\n    earlier = earlier.add(max, unit);\n    diff[unit] = max;\n  });\n\n  //reverse it, if necessary\n  if (isBefore) {\n    Object.keys(diff).forEach(u => {\n      if (diff[u] !== 0) {\n        diff[u] *= -1;\n      }\n    });\n  }\n  return diff\n}\n\n// Expects a plural unit arg\nfunction pluralize(value, unit) {\n  if (value === 1) {\n    unit = unit.slice(0, -1);\n  }\n  return value + ' ' + unit\n}\n\n//create the human-readable diff between the two dates\nconst since = (start, end) => {\n  end = fns.beADate(end, start);\n  const diff = getDiff(start, end);\n  const isNow = Object.keys(diff).every(u => !diff[u]);\n  if (isNow === true) {\n    return {\n      diff,\n      rounded: 'now',\n      qualified: 'now',\n      precise: 'now'\n    }\n  }\n  let rounded;\n  let qualified;\n  let precise;\n  let englishValues = [];\n\n  //go through each value and create its text-representation\n  Object.keys(diff).forEach((unit, i, units) => {\n    const value = Math.abs(diff[unit]);\n    if (value === 0) {\n      return\n    }\n    const englishValue = pluralize(value, unit);\n    englishValues.push(englishValue);\n    if (!rounded) {\n      rounded = qualified = englishValue;\n      if (i > 4) {\n        return\n      }\n      //is it a 'almost' something, etc?\n      const nextUnit = units[i + 1];\n      const nextValue = Math.abs(diff[nextUnit]);\n      if (nextValue > qualifiers[nextUnit].almost) {\n        rounded = pluralize(value + 1, unit);\n        qualified = 'almost ' + rounded;\n      } else if (nextValue > qualifiers[nextUnit].over) qualified = 'over ' + englishValue;\n    }\n  });\n  //make them into a string\n  precise = englishValues.splice(0, 2).join(', ');\n  //handle before/after logic\n  if (start.isAfter(end) === true) {\n    rounded += ' ago';\n    qualified += ' ago';\n    precise += ' ago';\n  } else {\n    rounded = 'in ' + rounded;\n    qualified = 'in ' + qualified;\n    precise = 'in ' + precise;\n  }\n  return {\n    diff,\n    rounded,\n    qualified,\n    precise\n  }\n};\n\nvar since_1 = since;\n\n//https://www.timeanddate.com/calendar/aboutseasons.html\n// Spring - from March 1 to May 31;\n// Summer - from June 1 to August 31;\n// Fall (autumn) - from September 1 to November 30; and,\n// Winter - from December 1 to February 28 (February 29 in a leap year).\nvar seasons = {\n  north: [\n    ['spring', 2, 1], //spring march 1\n    ['summer', 5, 1], //june 1\n    ['fall', 8, 1], //sept 1\n    ['autumn', 8, 1], //sept 1\n    ['winter', 11, 1] //dec 1\n  ],\n  south: [\n    ['fall', 2, 1], //march 1\n    ['autumn', 2, 1], //march 1\n    ['winter', 5, 1], //june 1\n    ['spring', 8, 1], //sept 1\n    ['summer', 11, 1] //dec 1\n  ]\n};\n\nvar quarters = [\n  null,\n  [0, 1], //jan 1\n  [3, 1], //apr 1\n  [6, 1], //july 1\n  [9, 1] //oct 1\n];\n\nconst units$2 = {\n  minute: s => {\n    walk_1(s, {\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  quarterhour: s => {\n    let minute = s.minutes();\n    if (minute >= 45) {\n      s = s.minutes(45);\n    } else if (minute >= 30) {\n      s = s.minutes(30);\n    } else if (minute >= 15) {\n      s = s.minutes(15);\n    } else {\n      s = s.minutes(0);\n    }\n    walk_1(s, {\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  hour: s => {\n    walk_1(s, {\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  day: s => {\n    walk_1(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  week: s => {\n    let original = s.clone();\n    s = s.day(s._weekStart); //monday\n    if (s.isAfter(original)) {\n      s = s.subtract(1, 'week');\n    }\n    walk_1(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  month: s => {\n    walk_1(s, {\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  quarter: s => {\n    let q = s.quarter();\n    if (quarters[q]) {\n      walk_1(s, {\n        month: quarters[q][0],\n        date: quarters[q][1],\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n    }\n    return s\n  },\n  season: s => {\n    let current = s.season();\n    let hem = 'north';\n    if (s.hemisphere() === 'South') {\n      hem = 'south';\n    }\n    for (let i = 0; i < seasons[hem].length; i++) {\n      if (seasons[hem][i][0] === current) {\n        //winter goes between years\n        let year = s.year();\n        if (current === 'winter' && s.month() < 3) {\n          year -= 1;\n        }\n        walk_1(s, {\n          year,\n          month: seasons[hem][i][1],\n          date: seasons[hem][i][2],\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisecond: 0\n        });\n        return s\n      }\n    }\n    return s\n  },\n  year: s => {\n    walk_1(s, {\n      month: 0,\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s\n  },\n  decade: s => {\n    s = s.startOf('year');\n    let year = s.year();\n    let decade = parseInt(year / 10, 10) * 10;\n    s = s.year(decade);\n    return s\n  },\n  century: s => {\n    s = s.startOf('year');\n    let year = s.year();\n    let decade = parseInt(year / 100, 10) * 100;\n    s = s.year(decade);\n    return s\n  }\n};\nunits$2.date = units$2.day;\n\nconst startOf = (a, unit) => {\n  let s = a.clone();\n  unit = fns.normalize(unit);\n  if (units$2[unit]) {\n    return units$2[unit](s)\n  }\n  if (unit === 'summer' || unit === 'winter') {\n    s = s.season(unit);\n    return units$2.season(s)\n  }\n  return s\n};\n\n//piggy-backs off startOf\nconst endOf = (a, unit) => {\n  let s = a.clone();\n  unit = fns.normalize(unit);\n  if (units$2[unit]) {\n    s = units$2[unit](s);\n    s = s.add(1, unit);\n    s = s.subtract(1, 'milliseconds');\n    return s\n  }\n  return s\n};\nvar startOf_1 = {\n  startOf,\n  endOf\n};\n\n//is it 'wednesday'?\nconst isDay = function(unit) {\n  if (days.short().find(s => s === unit)) {\n    return true\n  }\n  if (days.long().find(s => s === unit)) {\n    return true\n  }\n  return false\n};\n\n// return a list of the weeks/months/days between a -> b\n// returns spacetime objects in the timezone of the input\nconst every = function(start, unit = '', end) {\n  if (!unit || !end) {\n    return []\n  }\n  //cleanup unit param\n  unit = fns.normalize(unit);\n  //cleanup to param\n  end = start.clone().set(end);\n  //swap them, if they're backwards\n  if (start.isAfter(end)) {\n    let tmp = start;\n    start = end;\n    end = tmp;\n  }\n\n  //support 'every wednesday'\n  let d = start.clone();\n  if (isDay(unit)) {\n    d = d.next(unit);\n    unit = 'week';\n  } else {\n    d = d.next(unit);\n  }\n  //okay, actually start doing it\n  let result = [];\n  while (d.isBefore(end)) {\n    result.push(d);\n    d = d.add(1, unit);\n  }\n  return result\n};\nvar every_1 = every;\n\nconst parseDst = dst => {\n  if (!dst) {\n    return []\n  }\n  return dst.split('->')\n};\n\nconst titleCase = str => {\n  str = str[0].toUpperCase() + str.substr(1);\n  str = str.replace(/\\/gmt/, '/GMT');\n  str = str.replace(/[\\/_]([a-z])/gi, s => {\n    return s.toUpperCase()\n  });\n  return str\n};\n\n//get metadata about this timezone\nconst timezone = s => {\n  let zones = s.timezones;\n  let tz = s.tz;\n  if (zones.hasOwnProperty(tz) === false) {\n    tz = find(s.tz, zones);\n  }\n  if (tz === null) {\n    if (s.silent === false) {\n      console.warn(\"Warn: could not find given or local timezone - '\" + s.tz + \"'\");\n    }\n    return {\n      current: {\n        epochShift: 0\n      }\n    }\n  }\n  let found = zones[tz];\n  let result = {\n    name: titleCase(tz),\n    hasDst: Boolean(found.dst),\n    default_offset: found.offset,\n    //do north-hemisphere version as default (sorry!)\n    hemisphere: found.hem === 's' ? 'South' : 'North',\n    current: {}\n  };\n\n  if (result.hasDst) {\n    let arr = parseDst(found.dst);\n    result.change = {\n      start: arr[0],\n      back: arr[1]\n    };\n  }\n  //find the offsets for summer/winter times\n  //(these variable names are north-centric)\n  let summer = found.offset; // (july)\n  let winter = summer; // (january) assume it's the same for now\n  if (result.hasDst === true) {\n    if (result.hemisphere === 'North') {\n      winter = summer - 1;\n    } else {\n      //southern hemisphere\n      winter = found.offset + 1;\n    }\n  }\n\n  //find out which offset to use right now\n  //use 'summer' time july-time\n  if (result.hasDst === false) {\n    result.current.offset = summer;\n    result.current.isDST = false;\n  } else if (summerTime(s.epoch, result.change.start, result.change.back, summer) === true) {\n    result.current.offset = summer;\n    result.current.isDST = result.hemisphere === 'North'; //dst 'on' in winter in north\n  } else {\n    //use 'winter' january-time\n    result.current.offset = winter;\n    result.current.isDST = result.hemisphere === 'South'; //dst 'on' in summer in south\n  }\n  return result\n};\nvar timezone_1 = timezone;\n\n//the spacetime instance methods (also, the API)\nconst methods = {\n  set: function(input$1, tz) {\n    let s = this.clone();\n    s = input(s, input$1);\n    if (tz) {\n      this.tz = find(tz);\n    }\n    return s\n  },\n  timezone: function() {\n    return timezone_1(this)\n  },\n  isDST: function() {\n    return timezone_1(this).current.isDST\n  },\n  hasDST: function() {\n    return timezone_1(this).hasDst\n  },\n  offset: function() {\n    return timezone_1(this).current.offset * 60\n  },\n  hemisphere: function() {\n    return timezone_1(this).hemisphere\n  },\n  format: function(fmt) {\n    return format_1(this, fmt)\n  },\n  unixFmt: function(fmt) {\n    return unixFmt_1(this, fmt)\n  },\n  startOf: function(unit) {\n    return startOf_1.startOf(this, unit)\n  },\n  endOf: function(unit) {\n    return startOf_1.endOf(this, unit)\n  },\n  leapYear: function() {\n    let year = this.year();\n    return fns.isLeapYear(year)\n  },\n  progress: function(unit) {\n    return progress_1(this, unit)\n  },\n  nearest: function(unit) {\n    return nearest_1(this, unit)\n  },\n  diff: function(d, unit) {\n    return diff$1(this, d, unit)\n  },\n  since: function(d) {\n    if (!d) {\n      d = this.clone().set();\n    }\n    return since_1(this, d)\n  },\n  next: function(unit) {\n    let s = this.add(1, unit);\n    return s.startOf(unit)\n  },\n  //the start of the previous year/week/century\n  last: function(unit) {\n    let s = this.subtract(1, unit);\n    return s.startOf(unit)\n  },\n  isValid: function() {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false\n    }\n    return !isNaN(this.d.getTime())\n  },\n  //travel to this timezone\n  goto: function(tz) {\n    let s = this.clone();\n    s.tz = find(tz, s.timezones); //science!\n    return s\n  },\n  //get each week/month/day between a -> b\n  every: function(unit, to) {\n    return every_1(this, unit, to)\n  },\n  isAwake: function() {\n    let hour = this.hour();\n    //10pm -> 8am\n    if (hour < 8 || hour > 22) {\n      return false\n    }\n    return true\n  },\n  isAsleep: function() {\n    return !this.isAwake()\n  },\n  //pretty-printing\n  log: function() {\n    console.log('');\n    console.log(format_1(this, 'nice-short'));\n    return this\n  },\n  logYear: function() {\n    console.log('');\n    console.log(format_1(this, 'full-short'));\n    return this\n  },\n  debug: function() {\n    let tz = this.timezone();\n    let date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year();\n    date += '\\n     - ' + this.format('time');\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')');\n    return this\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function(d) {\n    d = this.clone().set(d);\n    return d.since(this)\n  },\n  fromNow: function() {\n    let d = this.clone().set(Date.now());\n    return d.since(this)\n  },\n  weekStart: function(input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input;\n      return this\n    }\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim();\n      let num = days.short().indexOf(input);\n      if (num === -1) {\n        num = days.long().indexOf(input);\n      }\n      if (num === -1) {\n        num = 1; //go back to default\n      }\n      this._weekStart = num;\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input);\n    }\n    return this\n  }\n};\n// aliases\nmethods.inDST = methods.isDST;\nmethods.round = methods.nearest;\nmethods.each = methods.every;\nvar methods_1 = methods;\n\n// javascript setX methods like setDate() can't be used because of the local bias\n//these methods wrap around them.\n\n\n\n\n\nconst validate = n => {\n  //handle number as a string\n  if (typeof n === 'string') {\n    n = parseInt(n, 10);\n  }\n  return n\n};\n\nconst order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n\n//reduce hostile micro-changes when moving dates by millisecond\nconst confirm = (s, tmp, unit) => {\n  let n = order.indexOf(unit);\n  let arr = order.slice(n, order.length);\n  for (let i = 0; i < arr.length; i++) {\n    let want = tmp[arr[i]]();\n    s[arr[i]](want);\n  }\n  return s\n};\n\nvar set = {\n  milliseconds: (s, n) => {\n    n = validate(n);\n    let current = s.millisecond();\n    let diff = current - n; //milliseconds to shift by\n    return s.epoch - diff\n  },\n\n  seconds: (s, n) => {\n    n = validate(n);\n    let diff = s.second() - n;\n    let shift = diff * milliseconds.second;\n    return s.epoch - shift\n  },\n\n  minutes: (s, n) => {\n    n = validate(n);\n    let old = s.clone();\n    let diff = s.minute() - n;\n    let shift = diff * milliseconds.minute;\n    s.epoch -= shift;\n    confirm(s, old, 'second');\n    return s.epoch\n  },\n\n  hours: (s, n) => {\n    n = validate(n);\n    if (n >= 24) {\n      n = 24;\n    } else if (n < 0) {\n      n = 0;\n    }\n    let old = s.clone();\n    let diff = s.hour() - n;\n    let shift = diff * milliseconds.hour;\n    s.epoch -= shift;\n    walk_1(s, {\n      hour: n\n    });\n    confirm(s, old, 'minute');\n    return s.epoch\n  },\n\n  //support setting time by '4:25pm' - this isn't very-well developed..\n  time: (s, str) => {\n    let m = str.match(/([0-9]{1,2}):([0-9]{1,2})(am|pm)?/);\n    if (!m) {\n      //fallback to support just '2am'\n      m = str.match(/([0-9]{1,2})(am|pm)/);\n      if (!m) {\n        return s.epoch\n      }\n      m.splice(2, 0, '0'); //add implicit 0 minutes\n    }\n    let h24 = false;\n    let hour = parseInt(m[1], 10);\n    let minute = parseInt(m[2], 10);\n    if (hour > 12) {\n      h24 = true;\n    }\n    //make the hour into proper 24h time\n    if (h24 === false) {\n      if (m[3] === 'am' && hour === 12) {\n        //12am is midnight\n        hour = 0;\n      }\n      if (m[3] === 'pm' && hour < 12) {\n        //12pm is noon\n        hour += 12;\n      }\n    }\n    s = s.hour(hour);\n    s = s.minute(minute);\n    s = s.second(0);\n    s = s.millisecond(0);\n    return s.epoch\n  },\n\n  date: (s, n) => {\n    n = validate(n);\n    //avoid setting february 31st\n    if (n > 28) {\n      const max = monthLengths_1[s.month()];\n      if (n > max) {\n        n = max;\n      }\n    }\n    //avoid setting < 0\n    if (n <= 0) {\n      n = 1;\n    }\n    walk_1(s, {\n      date: n\n    });\n    return s.epoch\n  },\n\n  //this one's tricky\n  month: (s, n) => {\n    if (typeof n === 'string') {\n      n = months.mapping()[n.toLowerCase()];\n    }\n    n = validate(n);\n    //don't go past december\n    if (n >= 12) {\n      n = 11;\n    }\n    if (n <= 0) {\n      n = 0;\n    }\n\n    let date = s.date();\n    //there's no 30th of february, etc.\n    if (date > monthLengths_1[n]) {\n      //make it as close as we can..\n      date = monthLengths_1[n];\n    }\n    walk_1(s, {\n      month: n,\n      date\n    });\n    return s.epoch\n  },\n\n  year: (s, n) => {\n    n = validate(n);\n    walk_1(s, {\n      year: n\n    });\n    return s.epoch\n  },\n\n  dayOfYear: (s, n) => {\n    n = validate(n);\n    let old = s.clone();\n    n -= 1; //days are 1-based\n    if (n <= 0) {\n      n = 0;\n    } else if (n >= 365) {\n      n = 364;\n    }\n    s = s.startOf('year');\n    s = s.add(n, 'day');\n    confirm(s, old, 'hour');\n    return s.epoch\n  }\n};\n\nconst methods$1 = {\n  millisecond: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.milliseconds(s, num);\n      return s\n    }\n    return this.d.getMilliseconds()\n  },\n  second: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.seconds(s, num);\n      return s\n    }\n    return this.d.getSeconds()\n  },\n  minute: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.minutes(s, num);\n      return s\n    }\n    return this.d.getMinutes()\n  },\n  hour: function(num) {\n    let d = this.d;\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.hours(s, num);\n      return s\n    }\n    return d.getHours()\n  },\n\n  //'3:30' is 3.5\n  hourFloat: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      let minute = num % 1;\n      minute = minute * 60;\n      let hour = parseInt(num, 10);\n      s.epoch = set.hours(s, hour);\n      s.epoch = set.minutes(s, minute);\n      return s\n    }\n    let d = this.d;\n    let hour = d.getHours();\n    let minute = d.getMinutes();\n    minute = minute / 60;\n    return hour + minute\n  },\n\n  // hour in 12h format\n  hour12: function(str) {\n    let d = this.d;\n    if (str !== undefined) {\n      let s = this.clone();\n      str = '' + str;\n      let m = str.match(/^([0-9]+)(am|pm)$/);\n      if (m) {\n        let hour = parseInt(m[1], 10);\n        if (m[2] === 'pm') {\n          hour += 12;\n        }\n        s.epoch = set.hours(s, hour);\n      }\n      return s\n    }\n    //get the hour\n    let hour12 = d.getHours();\n    if (hour12 > 12) {\n      hour12 = hour12 - 12;\n    }\n    if (hour12 === 0) {\n      hour12 = 12;\n    }\n    return hour12\n  },\n\n  //some ambiguity here with 12/24h\n  time: function(str) {\n    if (str !== undefined) {\n      let s = this.clone();\n      s.epoch = set.time(s, str);\n      return s\n    }\n    return `${this.h12()}:${fns.zeroPad(this.minute())}${this.ampm()}`\n  },\n\n  // either 'am' or 'pm'\n  ampm: function(input) {\n    let which = 'am';\n    let hour = this.hour();\n    if (hour >= 12) {\n      which = 'pm';\n    }\n    if (typeof input !== 'string') {\n      return which\n    }\n    //okay, we're doing a setter\n    let s = this.clone();\n    input = input.toLowerCase().trim();\n    //ampm should never change the day\n    // - so use `.hour(n)` instead of `.minus(12,'hour')`\n    if (hour >= 12 && input === 'am') {\n      //noon is 12pm\n      hour -= 12;\n      return s.hour(hour)\n    }\n    if (hour < 12 && input === 'pm') {\n      hour += 12;\n      return s.hour(hour)\n    }\n    return s\n  },\n\n  //some hard-coded times of day, like 'noon'\n  dayTime: function(str) {\n    if (str !== undefined) {\n      const times = {\n        morning: '7:00am',\n        breakfast: '7:00am',\n        noon: '12:00am',\n        lunch: '12:00pm',\n        afternoon: '2:00pm',\n        evening: '6:00pm',\n        dinner: '6:00pm',\n        night: '11:00pm',\n        midnight: '23:59pm'\n      };\n      let s = this.clone();\n      str = str || '';\n      str = str.toLowerCase();\n      if (times.hasOwnProperty(str) === true) {\n        s = s.time(times[str]);\n      }\n      return s\n    }\n    let h = this.hour();\n    if (h < 6) {\n      return 'night'\n    }\n    if (h < 12) {\n      //until noon\n      return 'morning'\n    }\n    if (h < 17) {\n      //until 5pm\n      return 'afternoon'\n    }\n    if (h < 22) {\n      //until 10pm\n      return 'evening'\n    }\n    return 'night'\n  },\n\n  //parse a proper iso string\n  iso: function(num) {\n    if (num !== undefined) {\n      return this.set(num)\n    }\n    return this.format('iso')\n  }\n};\nvar _01Time = methods$1;\n\nconst methods$2 = {\n  // # day in the month\n  date: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.date(s, num);\n      return s\n    }\n    return this.d.getDate()\n  },\n\n  //like 'wednesday' (hard!)\n  day: function(input) {\n    if (input === undefined) {\n      return this.d.getDay()\n    }\n    let original = this.clone();\n    let want = input;\n    // accept 'wednesday'\n    if (typeof input === 'string') {\n      input = input.toLowerCase();\n      want = days.short().indexOf(input);\n      if (want === -1) {\n        want = days.long().indexOf(input);\n      }\n    }\n    //move approx\n    let day = this.d.getDay();\n    let diff = day - want;\n    let s = this.subtract(diff * 24, 'hours');\n    //tighten it back up\n    walk_1(s, {\n      hour: original.hour(),\n      minute: original.minute(),\n      second: original.second()\n    });\n    return s\n  },\n\n  //these are helpful name-wrappers\n  dayName: function(input) {\n    if (input === undefined) {\n      return days.long()[this.day()]\n    }\n    let s = this.clone();\n    s = s.day(input);\n    return s\n  },\n\n  //either name or number\n  month: function(input) {\n    if (input !== undefined) {\n      let s = this.clone();\n      s.epoch = set.month(s, input);\n      return s\n    }\n    return this.d.getMonth()\n  }\n};\nvar _02Date = methods$2;\n\nconst clearMinutes = s => {\n  s = s.minute(0);\n  s = s.second(0);\n  s = s.millisecond(1);\n  return s\n};\n\nconst methods$3 = {\n  // day 0-366\n  dayOfYear: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.dayOfYear(s, num);\n      return s\n    }\n    //days since newyears - jan 1st is 1, jan 2nd is 2...\n    let sum = 0;\n    let month = this.d.getMonth();\n    let tmp;\n    //count the num days in each month\n    for (let i = 1; i <= month; i++) {\n      tmp = new Date();\n      tmp.setDate(1);\n      tmp.setYear(this.d.getFullYear()); //the year matters, because leap-years\n      tmp.setHours(1);\n      tmp.setMinutes(1);\n      tmp.setMonth(i);\n      tmp.setHours(-2); //the last day of the month\n      sum += tmp.getDate();\n    }\n    return sum + this.d.getDate()\n  },\n\n  //since the start of the year\n  week: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s = s.month(0);\n      s = s.date(1);\n      s = s.day('monday');\n      s = clearMinutes(s);\n      //don't go into last-year\n      if (s.monthName() === 'december') {\n        s = s.add(1, 'week');\n      }\n      num -= 1; //1-based\n      s = s.add(num, 'weeks');\n      return s\n    }\n    //find-out which week it is\n    let tmp = this.clone();\n    tmp = tmp.month(0);\n    tmp = tmp.date(1);\n    tmp = clearMinutes(tmp);\n    tmp = tmp.day('monday');\n    //don't go into last-year\n    if (tmp.monthName() === 'december') {\n      tmp = tmp.add(1, 'week');\n    }\n    const thisOne = this.epoch;\n    //if the week technically hasn't started yet\n    if (tmp.epoch > thisOne) {\n      return 1\n    }\n    //speed it up, if we can\n    let i = 0;\n    let skipWeeks = this.month() * 4;\n    tmp.epoch += milliseconds.week * skipWeeks;\n    i += skipWeeks;\n    for (; i < 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i\n      }\n      tmp = tmp.add(1, 'week');\n    }\n    return 52\n  },\n\n  //'january'\n  monthName: function(input) {\n    if (input === undefined) {\n      return months.long()[this.month()]\n    }\n    let s = this.clone();\n    s = s.month(input);\n    return s\n  },\n\n  //q1, q2, q3, q4\n  quarter: function(num) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '');\n        num = parseInt(num, 10);\n      }\n      if (quarters[num]) {\n        let s = this.clone();\n        let month = quarters[num][0];\n        s = s.month(month);\n        s = s.date(1);\n        s = s.startOf('day');\n        return s\n      }\n    }\n    let month = this.d.getMonth();\n    for (let i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1\n      }\n    }\n    return 4\n  },\n\n  //spring, summer, winter, fall\n  season: function(input) {\n    let hem = 'north';\n    if (this.hemisphere() === 'South') {\n      hem = 'south';\n    }\n    if (input !== undefined) {\n      let s = this.clone();\n      for (let i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1]);\n          s = s.date(1);\n          s = s.startOf('day');\n        }\n      }\n      return s\n    }\n    let month = this.d.getMonth();\n    for (let i = 0; i < seasons[hem].length - 1; i++) {\n      if (month >= seasons[hem][i][1] && month < seasons[hem][i + 1][1]) {\n        return seasons[hem][i][0]\n      }\n    }\n    return 'winter'\n  },\n\n  //the year number\n  year: function(num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = set.year(s, num);\n      return s\n    }\n    return this.d.getFullYear()\n  },\n\n  //bc/ad years\n  era: function(str) {\n    if (str !== undefined) {\n      let s = this.clone();\n      str = str.toLowerCase();\n      //TODO: there is no year-0AD i think. may have off-by-1 error here\n      let year = s.d.getFullYear();\n      //make '1992' into 1992bc..\n      if (str === 'bc' && year > 0) {\n        s.epoch = set.year(s, year * -1);\n      }\n      //make '1992bc' into '1992'\n      if (str === 'ad' && year < 0) {\n        s.epoch = set.year(s, year * -1);\n      }\n      return s\n    }\n    if (this.d.getFullYear() < 0) {\n      return 'BC'\n    }\n    return 'AD'\n  }\n};\nvar _03Year = methods$3;\n\nconst methods$4 = Object.assign({}, _01Time, _02Date, _03Year);\n\n//aliases\nmethods$4.milliseconds = methods$4.millisecond;\nmethods$4.seconds = methods$4.second;\nmethods$4.minutes = methods$4.minute;\nmethods$4.hours = methods$4.hour;\nmethods$4.hour24 = methods$4.hour;\nmethods$4.h12 = methods$4.hour12;\nmethods$4.h24 = methods$4.hour24;\nmethods$4.days = methods$4.day;\n\nconst addMethods = Space => {\n  //hook the methods into prototype\n  Object.keys(methods$4).forEach(k => {\n    Space.prototype[k] = methods$4[k];\n  });\n};\n\nvar query = addMethods;\n\nconst order$1 = ['millisecond', 'second', 'minute', 'hour', 'date', 'month'];\nlet keep = {\n  second: order$1.slice(0, 1),\n  minute: order$1.slice(0, 2),\n  quarterhour: order$1.slice(0, 2),\n  hour: order$1.slice(0, 3),\n  date: order$1.slice(0, 4),\n  month: order$1.slice(0, 4),\n  quarter: order$1.slice(0, 4),\n  season: order$1.slice(0, 4),\n  year: order$1,\n  decade: order$1,\n  century: order$1\n};\nkeep.week = keep.hour;\nkeep.season = keep.date;\nkeep.quarter = keep.date;\n\n// Units need to be dst adjuested\nconst dstAwareUnits = {\n  year: true,\n  quarter: true,\n  season: true,\n  month: true,\n  week: true,\n  day: true\n};\n\nconst keepDate = {\n  month: true,\n  quarter: true,\n  season: true,\n  year: true\n};\n//month is the only thing we 'model/compute'\n//- because ms-shifting can be off by enough\nconst rollMonth = (want, old) => {\n  //increment year\n  if (want.month > 0) {\n    let years = parseInt(want.month / 12, 10);\n    want.year = old.year() + years;\n    want.month = want.month % 12;\n  } else if (want.month < 0) {\n    //decrement year\n    let years = Math.floor(Math.abs(want.month) / 13, 10);\n    years = Math.abs(years) + 1;\n    want.year = old.year() - years;\n    //ignore extras\n    want.month = want.month % 12;\n    want.month = want.month + 12;\n    if (want.month === 12) {\n      want.month = 0;\n    }\n  }\n  return want\n};\n\nconst addMethods$1 = SpaceTime => {\n  SpaceTime.prototype.add = function(num, unit) {\n    let s = this.clone();\n    if (!unit || num === 0) {\n      return s //don't bother\n    }\n    let old = this.clone();\n    unit = fns.normalize(unit);\n    //move forward by the estimated milliseconds (rough)\n    if (milliseconds[unit]) {\n      s.epoch += milliseconds[unit] * num;\n    } else if (unit === 'week') {\n      s.epoch += milliseconds.day * (num * 7);\n    } else if (unit === 'quarter' || unit === 'season') {\n      s.epoch += milliseconds.month * (num * 4);\n    } else if (unit === 'season') {\n      s.epoch += milliseconds.month * (num * 4);\n    } else if (unit === 'quarterhour') {\n      s.epoch += milliseconds.minute * 15 * num;\n    }\n    //now ensure our milliseconds/etc are in-line\n    let want = {};\n    if (keep[unit]) {\n      keep[unit].forEach(u => {\n        want[u] = old[u]();\n      });\n    }\n\n    if (dstAwareUnits[unit]) {\n      const diff = old.timezone().current.offset - s.timezone().current.offset;\n      s.epoch += diff * 3600 * 1000;\n    }\n\n    //ensure month/year has ticked-over\n    if (unit === 'month') {\n      want.month = old.month() + num;\n      //month is the one unit we 'model' directly\n      want = rollMonth(want, old);\n    }\n    //support coercing a week, too\n    if (unit === 'week') {\n      let sum = old.date() + num * 7;\n      if (sum <= 28 && sum > 1) {\n        want.date = sum;\n      }\n    }\n    //support 25-hour day-changes on dst-changes\n    else if (unit === 'date') {\n      //specify a naive date number, if it's easy to do...\n      let sum = old.date() + num;\n      if (sum <= 28 && sum > 1) {\n        want.date = sum;\n      }\n      //or if we haven't moved at all..\n      else if (num !== 0 && old.isSame(s, 'day')) {\n        want.date = old.date() + num;\n      }\n    }\n    //ensure year has changed (leap-years)\n    else if (unit === 'year' && s.year() === old.year()) {\n      s.epoch += milliseconds.week;\n    }\n    //these are easier\n    else if (unit === 'decade') {\n      want.year = s.year() + 10;\n    } else if (unit === 'century') {\n      want.year = s.year() + 100;\n    }\n    //keep current date, unless the month doesn't have it.\n    if (keepDate[unit]) {\n      let max = monthLengths_1[want.month];\n      want.date = old.date();\n      if (want.date > max) {\n        want.date = max;\n      }\n    }\n    walk_1(s, want);\n    return s\n  };\n\n  //subtract is only add *-1\n  SpaceTime.prototype.subtract = function(num, unit) {\n    let s = this.clone();\n    return s.add(num * -1, unit)\n  };\n  //add aliases\n  SpaceTime.prototype.minus = SpaceTime.prototype.subtract;\n  SpaceTime.prototype.plus = SpaceTime.prototype.add;\n};\n\nvar add = addMethods$1;\n\n//make a string, for easy comparison between dates\nconst print = {\n  millisecond: s => {\n    return s.epoch\n  },\n  second: s => {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute(), s.second()].join('-')\n  },\n  minute: s => {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute()].join('-')\n  },\n  hour: s => {\n    return [s.year(), s.month(), s.date(), s.hour()].join('-')\n  },\n  day: s => {\n    return [s.year(), s.month(), s.date()].join('-')\n  },\n  week: s => {\n    return [s.year(), s.week()].join('-')\n  },\n  month: s => {\n    return [s.year(), s.month()].join('-')\n  },\n  quarter: s => {\n    return [s.year(), s.quarter()].join('-')\n  },\n  year: s => {\n    return s.year()\n  }\n};\nprint.date = print.day;\n\nconst addMethods$2 = SpaceTime => {\n  SpaceTime.prototype.isSame = function(b, unit) {\n    let a = this;\n    if (!unit) {\n      return null\n    }\n    if (typeof b === 'string' || typeof b === 'number') {\n      b = new SpaceTime(b, this.timezone.name);\n    }\n    //support 'seconds' aswell as 'second'\n    unit = unit.replace(/s$/, '');\n\n    if (print[unit]) {\n      return print[unit](a) === print[unit](b)\n    }\n    return null\n  };\n};\n\nvar same = addMethods$2;\n\nconst addMethods$3 = SpaceTime => {\n  const methods = {\n    isAfter: function(d) {\n      d = fns.beADate(d, this);\n      let epoch = fns.getEpoch(d);\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch > epoch\n    },\n    isBefore: function(d) {\n      d = fns.beADate(d, this);\n      let epoch = fns.getEpoch(d);\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch < epoch\n    },\n    isEqual: function(d) {\n      d = fns.beADate(d, this);\n      let epoch = fns.getEpoch(d);\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch === epoch\n    },\n    isBetween: function(start, end) {\n      start = fns.beADate(start, this);\n      end = fns.beADate(end, this);\n      let startEpoch = fns.getEpoch(start);\n      if (startEpoch === null) {\n        return null\n      }\n      let endEpoch = fns.getEpoch(end);\n      if (endEpoch === null) {\n        return null\n      }\n      return startEpoch < this.epoch && this.epoch < endEpoch\n    }\n  };\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nvar compare = addMethods$3;\n\nconst addMethods$4 = SpaceTime => {\n  const methods = {\n    i18n: data => {\n      //change the day names\n      if (fns.isObject(data.days)) {\n        days.set(data.days);\n      }\n      //change the month names\n      if (fns.isObject(data.months)) {\n        months.set(data.months);\n      }\n    }\n  };\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nvar i18n = addMethods$4;\n\nlet timezones = unpack;\n\n//fake timezone-support, for fakers (es5 class)\nconst SpaceTime = function(input$1, tz, options = {}) {\n  //the holy moment\n  this.epoch = null;\n  //the shift for the given timezone\n  this.tz = find(tz, timezones);\n  //whether to output warnings to console\n  this.silent = options.silent || true;\n\n  //does the week start on sunday, or monday:\n  this._weekStart = 1; //default to monday\n  if (options.weekStart !== undefined) {\n    this._weekStart = options.weekStart;\n  }\n  //add getter/setters\n  Object.defineProperty(this, 'd', {\n    //return a js date object\n    get: function() {\n      let offset = quick(this);\n      //every computer is somewhere- get this computer's built-in offset\n      let bias = new Date(this.epoch).getTimezoneOffset() || 0;\n      //movement\n      let shift = bias + offset * 60; //in minutes\n      shift = shift * 60 * 1000; //in ms\n      //remove this computer's offset\n      let epoch = this.epoch + shift;\n      let d = new Date(epoch);\n      return d\n    }\n  });\n  //add this data on the object, to allow adding new timezones\n  Object.defineProperty(this, 'timezones', {\n    get: () => timezones,\n    set: obj => {\n      timezones = obj;\n      return obj\n    }\n  });\n  //parse the various formats\n  if (input$1 !== undefined || input$1 === null) {\n    let tmp = input(this, input$1, tz);\n    this.epoch = tmp.epoch;\n  }\n};\n\n//(add instance methods to prototype)\nObject.keys(methods_1).forEach(k => {\n  SpaceTime.prototype[k] = methods_1[k];\n});\n\n// ¯\\_(ツ)_/¯\nSpaceTime.prototype.clone = function() {\n  return new SpaceTime(this.epoch, this.tz, {\n    silent: this.silent,\n    weekStart: this._weekStart\n  })\n};\n\n//append more methods\nquery(SpaceTime);\nadd(SpaceTime);\nsame(SpaceTime);\ncompare(SpaceTime);\ni18n(SpaceTime);\n\nvar spacetime = SpaceTime;\n\n// const timezones = require('../data');\n\nconst whereIts = (a, b) => {\n  let start = new spacetime(null);\n  let end = new spacetime(null);\n  start = start.time(a);\n  //if b is undefined, use as 'within one hour'\n  if (b) {\n    end = end.time(b);\n  } else {\n    end = start.add(59, 'minutes');\n  }\n\n  let startHour = start.hour();\n  let endHour = end.hour();\n  let tzs = Object.keys(start.timezones).filter(tz => {\n    if (tz.indexOf('/') === -1) {\n      return false\n    }\n    let m = new spacetime(null, tz);\n    let hour = m.hour();\n    //do 'calendar-compare' not real-time-compare\n    if (hour >= startHour && hour <= endHour) {\n      //test minutes too, if applicable\n      if (hour === startHour && m.minute() < start.minute()) {\n        return false\n      }\n      if (hour === endHour && m.minute() > end.minute()) {\n        return false\n      }\n      return true\n    }\n    return false\n  });\n  return tzs\n};\nvar whereIts_1 = whereIts;\n\nvar _version = '6.0.0';\n\nconst main$1 = (input, tz, options) => new spacetime(input, tz, options);\n\n//some helper functions on the main method\nmain$1.now = (tz, options) => new spacetime(new Date().getTime(), tz, options);\nmain$1.today = (tz, options) => {\n  let s = new spacetime(new Date().getTime(), tz, options);\n  return s.startOf('day')\n};\nmain$1.tomorrow = (tz, options) => {\n  let s = new spacetime(new Date().getTime(), tz, options);\n  return s.add(1, 'day').startOf('day')\n};\nmain$1.yesterday = (tz, options) => {\n  let s = new spacetime(new Date().getTime(), tz, options);\n  return s.subtract(1, 'day').startOf('day')\n};\nmain$1.extend = function(obj) {\n  Object.keys(obj).forEach(k => {\n    spacetime.prototype[k] = obj[k];\n  });\n  return this\n};\n//find tz by time\nmain$1.whereIts = whereIts_1;\nmain$1.version = _version;\n\n//aliases:\nmain$1.plugin = main$1.extend;\nvar src = main$1;\n\nexport default src;\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","const classIdSplit = /([\\.#]?[a-zA-Z0-9\\u007F-\\uFFFF_:-]+)/\nconst notClassId = /^\\.|#/\n\nmodule.exports = (h) => (element, data, children) => {\n  if (element == null)\n    return h('div', data, children)\n  if (typeof(element) != 'string')\n    return h(element, data, children)\n  if (data == null || typeof(data) != 'object' || Array.isArray(data)) {\n    children = data\n    data = {}\n  }\n\n  const parts = element.split(classIdSplit)\n  for (let part of parts) {\n    const type = part.charAt(0)\n    const value = part.substring(1, part.length)\n\n    if (type === '.') {\n      if (!data.class) data.class = {}\n      data.class[value] = true\n    }\n    else if (type === '#' && !data.hasOwnProperty('id')) {\n      if (!data.attrs) data.attrs = {}\n      data.attrs.id = value\n    }\n  }\n\n  // default to div\n  const tag = notClassId.test(parts[1])\n    ? 'div'\n    : parts[1]\n  return h(tag, data, children)\n}\n","Array.prototype.flat||Object.defineProperty(Array.prototype,\"flat\",{configurable:!0,value:function r(){var t=isNaN(arguments[0])?1:Number(arguments[0]);return t?Array.prototype.reduce.call(this,function(a,e){return Array.isArray(e)?a.push.apply(a,r.call(e,t-1)):a.push(e),a},[]):Array.prototype.slice.call(this)},writable:!0}),Array.prototype.flatMap||Object.defineProperty(Array.prototype,\"flatMap\",{configurable:!0,value:function(r){return Array.prototype.map.apply(this,arguments).flat()},writable:!0})\n"],"sourceRoot":""}